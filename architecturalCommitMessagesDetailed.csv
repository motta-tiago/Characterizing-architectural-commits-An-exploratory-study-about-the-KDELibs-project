Key;Author;Date;Commit Message;Size of commit message;Keywords;Number of Keywords;Architectural Topic;Time since the start of project (in months);Previous commit key;Comment without stopword;Size of commit message without stopwords;Amount of files changed in commit;Total lines affected in commit;Inserted lines in commit;Removed lines in commit
2073ebd052a75cfadcd924a4824795968cd568a6;David Faure <faure@kde.org>;25/02/16 09:15;kwallet::openwallet(synchronous) : don't time out after 25 seconds. the default dbus timeout is 25 seconds, which means that if the user went to get a cup of tea during session startup, when they come back they get prompted with all sorts of additional non-kwallet password requests due to all kwallet requests having timed out. i added settimeout in qdbusabstractinterface in qt 4.8 for things like this. testcase: eval `dbus-launch` export ssh_askpass=$kdedir/bin/ksshaskpass ssh-add < /dev/null (but the same happens with the imap resource etc.) backport of http://commits.kde.org/kwallet-framework/40f1fd03fc6d86f206322a100c5e1ead0df33493 ;643;interfac;1;13-TYPE;226;1e5e3c9e2993c42d65fd4f2570707c06ada0bf8c;kwallet::openwallet(synchronous) : dont time out 25 seconds default dbus timeout 25 seconds means user went cup tea during session startup come back prompted sorts additional nonkwallet password requests due kwallet requests having timed out added settimeout qdbusabstractinterface qt 48 things testcase: eval dbuslaunch export sshaskpasskdedir/bin/ksshaskpass sshadd /dev/null (but same happens imap resource etc) backport ;424;1;13;8;5
ddd2b3290d5d7cef9abfba7ce5e15b6c801d531c;Stephen Kelly <steveire@gmail.com>;20/07/15 20:03;remove policy settings from findkde4internal. at this point, the ones which are set here are all set to new, except cmp0011.  the point of cmp0011 here is to make the policy settings be used by consumers.  all consumers need to gain a use of the cmake_minimum_required command now anyway to satisfy cmp0000, so just remove the call in the internal file. ;354;requir;1;9-TYPE;219;dda2199d601491c6ceb07b5f11c8696216558623;remove policy settings findkde4internal point ones set here set new except cmp0011 point cmp0011 here make policy settings used consumers consumers need gain use cmakeminimumrequired command now anyway satisfy cmp0000 remove call internal file ;244;1;29;0;29
eaffd50adfd7fcbeafadb0248904176808b4499d;Milian Wolff <mail@milianw.de>;06/06/14 10:02;optimize kconfiggroup::exists and similar operations. before, these kind of read-only operations did a lot of allocations: 1) allocate a list of all sub groups 2) for the above, also allocate a sub-group match key 3) iterate over sub groups, allocate a list of all keys in there and then finally check whether that list is non-empty all of the above is now done without a single allocation, by simply iterating over the list of entries. note: the whole list was iterated even before in allsubgroups. now we still do that, but check for non-empty keys in the group or sub group directly. much more efficient. note2: while at it, allsubgroups is also optimized to not require the allocation of the subgroup match key. review: 118586 ;731;requir, iter;2;5-TYPE;205;668c95dae94209657d349420a7d15323df99e969;optimize kconfiggroup::exists similar operations before kind readonly operations lot allocations: 1) allocate list sub groups 2) above allocate subgroup match key 3) iterate over sub groups allocate list keys finally check whether list nonempty above now done without single allocation simply iterating over list entries note: whole list iterated even before allsubgroups now still check nonempty keys group sub group directly much more efficient note2: allsubgroups optimized require allocation subgroup match key ;515;1;20;12;8
225c69ad473d94400ddc9a4d233da9744622cc51;Aaron J. Seigo <aseigo@kde.org>;13/12/13 17:29;"add kiosk key ""plasma/$appname/unlockeddesktop"" since we no longer merge the appletsrc files, this returns an easy and reliable way to globally lock it all down ";161;reliabl;1;8-TYPE;200;8facec405ff4c5bc3666246183575f5d3dc8a896;add kiosk key plasma/appname/unlockeddesktop longer merge appletsrc files returns easy reliable way globally lock down ;119;1;5;4;1
ee929ed038c4530b136475c51839735ff88bc212;Lukáš Tinkl <lukas@kde.org>;27/11/13 20:37;detect removable devices more reliably with udisks2 backend ;60;reliabl;1;6-TYPE;199;6241ec6f40881ec3a8f3ef4541d6d6953024a174;detect removable devices more reliably udisks2 backend ;55;1;3;2;1
6241ec6f40881ec3a8f3ef4541d6d6953024a174;Lukáš Tinkl <lukas@kde.org>;27/11/13 20:37;detect removable devices more reliably with udisks2 backend bug: 325245 ;72;reliabl;1;6-TYPE;199;767a7c075dedd77c4ef0dcfcf920cb123a3091e3;detect removable devices more reliably udisks2 backend ;55;1;3;2;1
3a6edd8d183140da3ea042f91933b6d4756d5f7e;Andrea Iacovitti <aiacovitti@libero.it>;19/11/13 17:08;crash protection against null layer. bug: 234674 fixed-in: 4.11.4 ;66;layer;1;13-TYPE;199;6d8fac9e342cfbcafb20846e647f25696d67da57;crash protection against null layer ;36;2;41;29;12
ef2163321f3572ef476eb6888de75ae460e0bc76;Andrea Iacovitti <aiacovitti@libero.it>;30/10/13 09:16;make sure qt application level proxy is set to qnetworkproxy::noproxy before connecting to host when it is not required. bug: 326799 fixed-in: 4.11.3 review: 113492 ;165;requir;1;7-TYPE;198;de642c0df5576beae54290b4df2905672de69d0a;make sure qt application level proxy set qnetworkproxy::noproxy before connecting host required ;96;1;3;3;0
619143f0e71911d44fb0c4f1511cf48795becd90;Philipp Schmidt <philschmidt@gmx.net>;27/10/13 19:43;improve mtp support a simple hack to make media players more distinguishable until a better solution can be integrated in kf5 as discussed with afiestas at akademy 2013. follows up on his patches that never got integrated. returns the product instead of the description. approved by lukáš tinkl and àlex fiestas review: 111576 ;327;layer;1;11-TYPE;198;64194a2a3c8e9c4092703e8946cee57eec3bbf18;improve mtp support simple hack make media players more distinguishable until better solution integrated kf5 discussed afiestas akademy 2013 follows up patches never integrated returns product instead description approved lukáš tinkl àlex fiestas ;247;1;13;11;2
8791daf6c46e57c3760a564a7dfbe85513aba522;Lamarque V. Souza <lamarque@kde.org>;22/09/13 09:32;do not leak sockets in networkinterface::iswireless(). bug: 324954 review: 112869 fixed-in: 4.11.2 ;99;interfac;1;7-TYPE;197;3749f86e62dbd1705e6008f5fcbdbc0f36cc1f93;leak sockets networkinterface::iswireless() ;44;1;3;3;0
6e3827c37add0cb92cd5a05319911a0d175c1228;Lamarque V. Souza <lamarque@kde.org>;22/09/13 09:32;do not leak sockets in networkinterface::iswireless(). bug: 324954 review: 112869 fixed-in: 4.11.2 (cherry picked from commit 0fe1144113042e6e5bea49b112bedae91f60d78b) ;168;interfac;1;7-TYPE;197;697032012c43417fa4154a11b47e590bbdf0a8df;leak sockets networkinterface::iswireless() (cherry picked commit 0fe1144113042e6e5bea49b112bedae91f60d78b) ;108;1;3;3;0
ef3de4a99c3af0557f51afe61e30addb592f2d4a;Dawit Alemayehu <adawit@kde.org>;04/09/13 01:00;set modified meta-data for all copy jobs, not just move operations. ccbug: 55804 review: 112528 ;96;modifi;1;8-TYPE;196;206d4137cfd63c47e52ce6630cf6834ab2e759ee;set modified metadata copy jobs move operations ;48;1;4;2;2
a305e57fe2278563b641414a484cf19015fa1c41;Àlex Fiestas <afiestas@kde.org>;21/06/13 20:16;when kbuildsyscoca is ran, refresh modules by executing initmodules this basically unloads/loads added/removed modules, quite handy for not having to restart kded to get new modules loaded, specially during upgrades or installation of software. ;245;modul;1;1-TYPE;194;0e934088c5647fe3d56f76fdb28d05c0fdf0f7a4;kbuildsyscoca ran refresh modules executing initmodules basically unloads/loads added/removed modules quite handy having restart kded new modules loaded specially during upgrades installation software ;201;1;4;2;2
183e59b8e9fe938c209493aa7aa98382ccd08e71;Frank Reininghaus <frank78ac@googlemail.com>;22/05/13 19:16;use the fisher-yates algorithm to randomize lists this ensures that the time required for the shuffling depends linearly on the length of the list, rather than quadratically. moreover, it prevents memory allocations during the shuffling and thus saves time even for very short lists. review: 110262 ;299;requir;1;13-TYPE;193;6f60fd20e8f55be2a87b174f3e491d1aa2a1a301;use fisheryates algorithm randomize lists ensures time required shuffling depends linearly length list quadratically moreover prevents memory allocations during shuffling thus saves time even very short lists ;209;1;17;9;8
1dfe8173ba666c41375878c5e67d69d2cd658a52;Lukáš Tinkl <lukas@kde.org>;19/04/13 17:16;don't expose the hybridsuspend directly on fdo interface reviewed by dario ;75;interfac;1;11-TYPE;192;137c4d58664657bc9e11068dc1a0ff739f06b121;dont expose hybridsuspend directly fdo interface reviewed dario ;64;2;4;0;4
8d99f863724c6fe76d008da4455fa177af2ee3ee;Àlex Fiestas <afiestas@kde.org>;15/04/13 12:24;"disable khostnamed in kded khostnamed monitors the hostname by polling gethostname every 5 seconds to adapt some bits of the environment in case the hostname changes. in systems with only a local x server this does not matter at all. in systems using remote x you should not change your hostname, period. in most distributions changing your hostname no longuer breaks x access for local applications since xhost is configured correctly. in summary there is no reason to keep this around. besides that, kdontchangethehostname (binay that is called when the hostname is changed) does not work if your display env is like "":0"" which is the format that can be found in all distributions nowdays (old format was domain/[unix,tcp,...]:0). even fixing it, most distributions use a global xauthority pointed by the dm or xauthority env which points to either /run/*dm/... or in /tmp/user.... meaning that the most important adaptation to the new hostname that kdontchangethehostname does won't work either. if this is ever enabled again the polling should be removed by either using systemd-hostnamed or inotify+/etc/hostname but polling won't be accepted. this commits only disables the code, if nobody complains i will remove the full code before 4.11 is out. ccmail:kde-core-devel@kde.org ";1284;adapt;1;8-TYPE;192;5296938e09b5e5b83c85b894507d06d74f2051cd;disable khostnamed kded khostnamed monitors hostname polling gethostname 5 seconds adapt bits environment case hostname changes systems local x server matter systems using remote x change hostname period distributions changing hostname longuer breaks x access local applications xhost configured correctly summary reason keep around besides kdontchangethehostname (binay called hostname changed) work display env :0 format found distributions nowdays (old format domain/unixtcp:0) even fixing distributions use global xauthority pointed dm xauthority env points /run/dm/ /tmp/user meaning important adaptation new hostname kdontchangethehostname wont work enabled again polling removed using systemdhostnamed inotify/etc/hostname polling wont accepted commits disables code nobody complains remove full code before 411 out ccmail:kdecoredevelkdeorg ;849;1;2;1;1
aabebcbfeaf1a88e17e5a6ed3c009ab39274152d;Bernd Buschinski <b.buschinski@googlemail.com>;29/03/13 21:20;"kjs: extend propertyslot like jsc does, introduce new getvaluenumberfunc to avoid doing unneeded identifier::from(unsigned) if we already know its an unsigned. before we used to do something like: store unsigned -> identifier::from(unsigned) ->  call -> identifier.toarrayindex to get the unsigned again -> use unsigned now: store unsigned -> call -> use unsigned. the pure identifier/""string"" case is unchanged. also (like jsc too) add function to directly store the value, this avoids extra function call. now we no longer need to create a static getvaluefunc for getting a tiny value. (less code, more fun) this overall improves the performance for kjs: with sunspider 1.0-svn, (less is better, 3*10 runs) before: 2887.5ms, 2836.9ms, 2865.4ms after: 2748.5ms, 2756.4ms, 2747.3ms octane benchmark (more is better) before score: 225 after score: 272 and most important not a single testcase got slower. for typed-arrays, my extra bloated worstcase bubble sort testcase (less is better) before: ~44sec after: ~18sec review:108946 ";1030;extend;1;13-TYPE;191;e769fee13b4c1b363cdc4674d292748126899162;kjs: extend propertyslot jsc introduce new getvaluenumberfunc avoid doing unneeded identifier::from(unsigned) already know unsigned before used something like: store unsigned identifier::from(unsigned) call identifiertoarrayindex unsigned again use unsigned now: store unsigned call use unsigned pure identifier/string case unchanged (like jsc too) add function directly store value avoids extra function call now longer need create static getvaluefunc getting tiny value (less code more fun) overall improves performance kjs: sunspider 10svn (less better 310 runs) before: 28875ms 28369ms 28654ms after: 27485ms 27564ms 27473ms octane benchmark (more better) before score: 225 score: 272 important single testcase slower typedarrays extra bloated worstcase bubble sort testcase (less better) before: 44sec after: 18sec ;820;5;90;65;25
be5ca0c8406d82af0cfb8f8a250410399873b76d;Dan Vrátil <dvratil@redhat.com>;03/12/12 15:42;cache udisks2 device dbus connections cache the qdbusinterface connection for each udi so that it's not recreated every time solid::device is constructed. this greatly reduces the number of dbus calls and makes the udisks2 backend much faster. ;244;interfac;1;13-TYPE;187;e578c0d969456d7463b0ca581e9ce3b0590e7810;cache udisks2 device dbus connections cache qdbusinterface connection each udi recreated time solid::device constructed greatly reduces number dbus calls makes udisks2 backend much faster ;188;7;577;405;172
21d139b7382256fdd62933f61987903779f63010;Aleix Pol <aleixpol@kde.org>;09/11/12 13:40;reduce many connect() warnings when loading declarative plasmoids. right now, every qml plasmoid can provide a number of properties (6, actually) to specify some size hints (maximum, minimum and preferred). if you don't provide those properties you get many warnings because of the missing changed connections. this patch removes such warnings by making sure the property is present before connecting and querying the property at all. review: 107261 ;450;provid;1;7-TYPE;186;5a3cedacdb6485f7551090467cffb2cdf150b05a;reduce many connect() warnings loading declarative plasmoids right now qml plasmoid provide number properties (6 actually) specify size hints (maximum minimum preferred) dont provide those properties many warnings missing changed connections patch removes such warnings making sure property present before connecting querying property ;335;1;40;26;14
d69c07afe7b79f326cb53214705a1da4b51f67ae;Aaron J. Seigo <aseigo@kde.org>;02/11/12 13:46;required to lower memory consumption for pa4 ;45;requir;1;13-TYPE;186;2e6790fc2124912a2f75055de57cff679e78a62a;required lower memory consumption pa4 ;38;2;47;45;2
ef269fdee33113354776693089c26f73093658a5;Dawit Alemayehu <adawit@kde.org>;24/09/12 02:31;"changed the global ""treat all cookies as session cookies"" option to a per domain/cookie policy setting called ""acceptforsession"". as the name implies the policy allows a user to accept a given cookie that would automatically expire it at the end of the current session regardless of the cookies' expiration date. the patch has a corresponding patch that takes care of the cookie configuration module and was provided by regorio guidi. ccmail:gregorio.guidi@gmail.com ccbug:54300 review:106618 ";493;provid, modul;2;8-TYPE;185;b3e379c617aa5b594ca944d8ee6f13ceb64758e3;changed global treat cookies session cookies option per domain/cookie policy setting called acceptforsession name implies policy allows user accept given cookie automatically expire end current session regardless cookies expiration date patch corresponding patch takes care cookie configuration module provided regorio guidi ccmail:gregorioguidigmailcom ;354;11;366;258;108
886014f477ebddaf7a4e66d795a85ecab7bad617;Jacopo De Simoi <wilderkde@gmail.com>;19/08/12 17:17;"ensure slotchanged is called in all instances move slotchanged call to the broadcastdone slot so that it is called in all instances of the device; in fact broadcastdone is called by dbus.  this makes sure that the device state is correctly updated when modified by some out-of-process routine, e.g. when mounted via kde-runtime/soliduiserver actions. this *should* fix bug 268020, please check ccbug: 268020 ";408;modifi;1;8-TYPE;184;b6a802bfab579880612740e7f9da2569fcd900cd;ensure slotchanged called instances move slotchanged call broadcastdone slot called instances device fact broadcastdone called dbus makes sure device state correctly updated modified outofprocess routine eg mounted via kderuntime/soliduiserver actions fix bug 268020 please check ;280;1;12;4;8
c5f36b67f4d3a98fe93dcbef7fb3361248e69b1b;Aaron J. Seigo <aseigo@kde.org>;31/05/12 14:58;package operates locally only as it is, so no point in using kio here. this also happens to allow plasmapkg to work outside a kde session. ;139;packag;1;6-TYPE;181;cbefea82dcb2476db82a580b076d80561f25f276;package operates locally point using kio here happens allow plasmapkg work outside kde session ;95;1;57;11;46
66d010f7af2d7a63c111d2d62a62ce489791a370;Michael Pyne <mpyne@kde.org>;19/05/12 13:07;"kshareddatacache: add ""corrupt cache"" exception. the new exception is not actually thrown yet, but this commit provides support for handling such an exception, using the following guideline: * any exceptions used never cross the api. i.e. client code can be assured that the underlying library code will not throw any exceptions when called through the public api. it is simply an implementation aid. * if private::cachelocker succeeds, it means both d and d->shm are valid. * the d-pointer is not necessarily set now, as constructing private and mapping shared memory will involve sanity checking the cache as it is loaded. this affects code using the d-pointer or d->shm without the cachelocker. * private::cachelocker itself must still be usable if the d-pointer is not set, in addition to its existing ability to handle d->shm not being set. for just evaluating code changes it might be easiest to use ""git diff -b"", which ignores whitespace (there are significant whitespace changes from adding try{}/catch{} blocks). ";1023;provid;1;4-TYPE;181;6bb12381a5614e1f4d29953f1bfee2b9b925039e;kshareddatacache: add corrupt cache exception new exception actually thrown commit provides support handling such exception using following guideline: exceptions used never cross api ie client code assured underlying library code throw exceptions called through public api simply implementation aid private::cachelocker succeeds means both d dshm valid dpointer necessarily set now constructing private mapping shared memory involve sanity checking cache loaded affects code using dpointer dshm without cachelocker private::cachelocker itself still usable dpointer set addition existing ability handle dshm being set evaluating code changes easiest use git diff b ignores whitespace (there significant whitespace changes adding try/catch blocks) ;746;2;490;279;211
35a35ebc80a5a21a6e7c0d936bf79bf2ac187dd9;Dawit Alemayehu <adawit@kde.org>;06/04/12 11:07;"- fixed several issues with ntlm authentication handling. - factored out the code that deals with authentication into two separate functions, handleauthentication and saveauthenticationdata, for readability and ease of maintainence - hard coded the workstation name used during ntlm authentication to ""workstation"" instead of sending the actual local hostname (privacy). - do not set m_config to null in kabstractauthentication::reset since it is only assigned a value during consturction of the authentication object. bug:296163 fixed-in:4.8.3 ";545;maintain;1;13-TYPE;179;532d7c16c1f02de2cee028cd9bce7b7614c2737d;fixed several issues ntlm authentication handling factored out code deals authentication two separate functions handleauthentication saveauthenticationdata readability ease maintainence hard coded workstation name used during ntlm authentication workstation instead sending actual local hostname (privacy) set mconfig null kabstractauthentication::reset assigned value during consturction authentication object ;411;4;469;259;210
53e822d349012f2bae17f5df95427b9f503ea709;Vishesh Handa <handa.vish@gmail.com>;29/02/12 00:49;"revert ""do not use nepomuk::resource in the resourcewatcher"" this reverts commit fcbac39a6f8906cd669a4e2b98191cb26d67fa40. though this commit solves a dead lock, it diverges kdelibs from nepomuk-core. in order to push this commit into nepomuk-core we would need to change the interface of the resourcewatcher, and that would really annoy everyone. ( there is an easier fix ) ";375;interfac;1;8-TYPE;178;b16cfec44104ded4a8959af4e790fe2f7d6d2745;revert use nepomuk::resource resourcewatcher reverts commit fcbac39a6f8906cd669a4e2b98191cb26d67fa40 though commit solves dead lock diverges kdelibs nepomukcore order push commit nepomukcore need change interface resourcewatcher really annoy everyone ( easier fix ) ;266;5;80;43;37
a43057985ce95d043608a5a74555fbb7e6f5ed20;Dawit Alemayehu <adawit@kde.org>;21/02/12 12:55;added a new interface, htmlsettingsinterface, to htmlextension to allow generic access to html settings. review: 103973 ;120;interfac, extens;2;11-TYPE;178;e589bd18d457d04fe8de3dd25d3a31fee94dd728;added new interface htmlsettingsinterface htmlextension allow generic access html settings ;91;3;139;136;3
de810a2b48c04617a58eb3eb52ad76fb599ff10e;Aaron J. Seigo <aseigo@kde.org>;13/02/12 22:30;fix up constraintsevent documentation ;38;constraint;1;4-TYPE;178;0fa873e587fecdcf69d81da3f2d86f0a17c6fe2e;fix up constraintsevent documentation ;38;2;36;17;19
1c5daeb5635c1b3d58d1a8666aba972dee6e9edd;Aaron J. Seigo <aseigo@kde.org>;30/10/11 10:24;add a wallpaper render that takes a pre-loaded qimage. far far faster than re-loading from disk if already in memory. new api (new overload, really), but required to fix iperformance issues elsewhere, so considered a bug fix ;225;requir;1;13-TYPE;174;d831b891992accb1a1941d7000618130933b15be;add wallpaper render takes preloaded qimage far far faster reloading disk already memory new api (new overload really) required fix iperformance issues elsewhere considered bug fix ;181;5;80;60;20
c2eb8c4225e2d7b6394e7f1c4a805f1f27763430;Dawit Alemayehu <adawit@kde.org>;25/10/11 14:14;if m_request.iskeepalive flag is false and the request has to be retried, e.g. in case of http authentication, then make sure the iskeepalive flag is reset to true since we have already carried out what the server requested and closed the previous connection. otherwise, proxied connections that rely on authentication scheme that requires persistent connection such as ntlm will fail. bug: 284870 fixed-in: 4.7.3 ;414;requir;1;7-TYPE;174;8ab7a522f65e0bb9d33b75a51e3d85613ea2abba;mrequestiskeepalive flag false request retried eg case http authentication make sure iskeepalive flag reset true already carried out server requested closed previous connection otherwise proxied connections rely authentication scheme requires persistent connection such ntlm fail ;280;1;2;2;0
8ab7a522f65e0bb9d33b75a51e3d85613ea2abba;Dawit Alemayehu <adawit@kde.org>;21/10/11 20:02;added kio::http_delete to support http delete. this is needed because http, unlike other protocols, requires redirection support which none of the currently available kio delete apis provide. review: 102938 ;207;requir, provid;2;7-TYPE;174;ed5917868b60a8fa03b8d679cb3f736e90da290f;added kio::httpdelete support http delete needed http unlike protocols requires redirection support none currently available kio delete apis provide ;149;3;25;24;1
a40ac815b158467f61640a906a88b51ec8ed7e58;Dawit Alemayehu <adawit@kde.org>;07/10/11 09:08;- check whether or not the qlist returned by qhostinfo::addresses is empty before calling .first() to avoid a crash. - avoid the subnet proxy exception check if the request url's host component is empty. ;204;compon;1;7-TYPE;173;8b8016cab53abbac3ce7d9dc50718a4744a0911a;check whether qlist returned qhostinfo::addresses empty before calling first() avoid crash avoid subnet proxy exception check request urls host component empty ;160;1;14;10;4
4a1e32abdd591d63cd1da7830a71b025fb69dc3f;Dawit Alemayehu <adawit@kde.org>;23/09/11 02:21;"changed proxy handling in http ioslave to support multiple proxy server, i.e. pac script files and fix several other related issues: * added a new function to tcpslavebase that attempts to connect to the a remote server without automatically sending error notitification to the client. * moved the proxy related code from 'resetsessionsettings' to 'httpopenconnection'. proxy information will now only be set from 'sethost' and only be reset when 'reparseconfiguration' is invoked. * added a new variable to the httprequest to store multiple proxy urls. * modified 'httpshouldcloseconnection' to account for multiple proxy addresses. * modified 'sendquery' to connect to the remote server before formatting the http headers so that the headers properly reflect the correct proxy settings. * removed support for 'persistentproxyconnection' option since it serves no other purpose than to cause unnecessary failures and bugs when using proxy servers.  to see these problems, simply disable the 'use persistent proxy conneciton' option in the proxy configuration dialog and use a proxy server, e.g. privoxy. * do not reset m_request.ikeepalive flag in httpcloseconnection. otherwise, it can inadvertently set the flag to false in ::sendquery where httpcloseconnection might get called under certain circumstances. in general this flag should originally be set in one location, resetsessionconfiguration, and changed only to accomodate what the server based on its response. * if the server sends back a ""keep-alive"" header, but reports itself as a http/1.0 server, make sure m_request.iskeepalive is set to true. review: 102696 ";1625;modifi;1;11-TYPE;173;ea46715275daee64851f3f5ded819a8229e8eeb0;changed proxy handling http ioslave support multiple proxy server ie pac script files fix several related issues: added new function tcpslavebase attempts connect remote server without automatically sending error notitification client moved proxy related code resetsessionsettings httpopenconnection proxy information now set sethost reset reparseconfiguration invoked added new variable httprequest store multiple proxy urls modified httpshouldcloseconnection account multiple proxy addresses modified sendquery connect remote server before formatting http headers headers properly reflect correct proxy settings removed support persistentproxyconnection option serves purpose cause unnecessary failures bugs using proxy servers see problems simply disable use persistent proxy conneciton option proxy configuration dialog use proxy server eg privoxy reset mrequestikeepalive flag httpcloseconnection otherwise inadvertently set flag false ::sendquery httpcloseconnection called under certain circumstances general flag originally set one location resetsessionconfiguration changed accomodate server based response server sends back keepalive header reports itself http/10 server make sure mrequestiskeepalive set true ;1220;4;305;179;126
fc923ff98a3d0aaf0fb57ca480ba022e2978c2ac;Andreas Hartmetz <ahartmetz@gmail.com>;26/09/11 21:14;"don't use ""method static"" (ahem) variables for per-instance data. when i wrote that code i didn't know that static data in member functions is ""global"" - all instances use the same data. so if there is more than one kextendableitemdelegate in an application, it makes bad things happen. at least it is binary compatible to remove the bogus variables. this is officially a brown paper bag bug. hopefully fixes bug: 259333 ";421;extend;1;8-TYPE;173;4034be9ac7134c44d8e35ac8cfd7f16fa22c7645;dont use method static (ahem) variables perinstance data wrote code didnt know static data member functions global instances use same data more one kextendableitemdelegate application makes bad things happen binary compatible remove bogus variables officially brown paper bag bug hopefully fixes ;296;1;47;26;21
b62550575601070b59499f59d7288e9d3527aac2;Valentin Rusu <kde@rusu.info>;04/09/11 17:16;added ksecretsservice api to kdeui module import done with history from playground:ksecretservice (client and lib) remaining modules in plaground adjusted to compile against this tests in kdeui/ksecretsservice/test pass against the daeamon from the playground wohoo! ;267;modul;1;6-TYPE;172;9dc42cd9dad33b8c281da624591bfef34f9b8533;added ksecretsservice api kdeui module import done history playground:ksecretservice (client lib) remaining modules plaground adjusted compile against tests kdeui/ksecretsservice/test pass against daeamon playground wohoo ;222;18;286;151;135
8ce0b813939f5c799e0c5e06e181985a3a0b4674;Valentin Rusu <kde@rusu.info>;04/09/11 11:11;placed the ksecretsservice client api into the kdeui module ;60;modul;1;6-TYPE;172;61ca4b3606c754be13aa298ce63050de3958ec5e;placed ksecretsservice client api kdeui module ;47;31;0;0;0
4d044bb0b80d0f4fe1392e8bf8e331176d61917b;Marco Martin <notmart@gmail.com>;13/07/11 20:32;a new packagestructure type: genericcomponent this component will be used for loading generic repositories of files, usually will be repositories of qml files ;159;compon, packag;2;12-TYPE;171;6ca4dfb8e938c81ffa7fce7e03b3569e99aac0f9;new packagestructure type: genericcomponent component used loading generic repositories files usually repositories qml files ;125;3;13;11;2
62a05a00a5cf6672fa6b85b450b18a05dd2ed7a8;Michael Pyne <mpyne@kde.org>;11/08/11 19:14;kshareddatacache: consolidate error handling. this commit consolidates the error handling that goes on with various unrecoverable failures to attach to the shared cache into a single function which can always be run to reset kshareddatacache::private into a state where mapsharedmemory() can be called again. this minor reorganization is required to support an upcoming bugfix, but also fixes the m_lock not being cleared even though the shared memory it belongs to has been unmapped. ;485;requir;1;8-TYPE;171;c41fb572be26697054c6fbf9d6e087a40617e72c;kshareddatacache: consolidate error handling commit consolidates error handling goes various unrecoverable failures attach shared cache single function always run reset kshareddatacache::private state mapsharedmemory() called again minor reorganization required support upcoming bugfix fixes mlock being cleared even though shared memory belongs unmapped ;355;1;36;25;11
bf0d1446f7a279516c63d715c7afa54b1d755ccc;Marco Martin <notmart@gmail.com>;19/07/11 21:40;remove the static hash of packagestructure unfortunately they are stateful with a state per-package, so sharing them leads to an incorrect state ;145;packag;1;8-TYPE;171;751adaa62a84560e1418c825d3cdf09d26eb229c;remove static hash packagestructure unfortunately stateful state perpackage sharing leads incorrect state ;106;1;14;1;13
b93c97454b36b5498e9abcec6beb1daf8839e3d7;Michael Jansen <kde@michael-jansen.biz>;29/06/11 23:26;rewritten findffmpeg.cmake - checks for all modules individually (pkgconfig) - supports components - provides versions - supports all ffmpeg modules. ccmail: kde-buildsystem@kde.org ;182;compon, provid, modul;3;10-TYPE;170;fa62f40e128a267879809c7d0d630dde773fbaef;rewritten findffmpegcmake checks modules individually (pkgconfig) supports components provides versions supports ffmpeg modules ccmail: kdebuildsystemkdeorg ;157;1;232;132;100
8893ac7c966972f60c34d030db476b5187392820;Michael Jansen <kde@michael-jansen.biz>;29/06/11 17:08;provide nepomuk_include_dirs and deprecate nepomuk_include_dir as suggested by the cmake readme.txt. ccmail: kde-buildsystem@kde.org ;133;provid;1;11-TYPE;170;10d2bd1f9fcde69436f5b51123a2f42ff67de680;provide nepomukincludedirs deprecate nepomukincludedir suggested cmake readmetxt ccmail: kdebuildsystemkdeorg ;110;1;10;8;2
a651984be97932adbe3e67fee2d7c6eff40b060f;Simon Persson <simonpersson1@gmail.com>;29/06/11 09:54;export the function isshiftasmodifierallowed() this function inside kkeysequncewidgetprivate is needed by the kglobalaccel daemon, export here rather than duplicating code and risk falling out of sync. also add qt::key_backtab to the list, this is not needed internally since there is a special case for alt+shift+tab to not be recorded as alt+backtab but other users of this function will need it. ccmail: kde@michael-jansen.biz review: 101515 ;445;modifi;1;8-TYPE;170;b2acdedce156893acb3007d359af4d53983bd351;export function isshiftasmodifierallowed() function inside kkeysequncewidgetprivate needed kglobalaccel daemon export here duplicating code risk falling out sync add qt::keybacktab list needed internally special case altshifttab recorded altbacktab users function need ccmail: kdemichaeljansenbiz ;297;2;92;53;39
bf3064cb42f51370f343a61041ac28f7cf81e3d7;Dawit Alemayehu <adawit@kde.org>;09/06/11 03:57;workaround yet another broken server that sends the incorrect mime-type information. this time it is the archlinux servers sending application/x-xz instead of application/x-xz-compressed-tar when downloading packages. bug: 267345 fixed-in: 4.6.5 (cherry picked from commit 3332be75106b7d555e7a44a24875b0b5085821f1) ;315;packag;1;7-TYPE;169;df4b3edddd0eb531c07d66a25d1a848980a4e1cd;workaround another broken server sends incorrect mimetype information time archlinux servers sending application/xxz instead application/xxzcompressedtar downloading packages (cherry picked commit 3332be75106b7d555e7a44a24875b0b5085821f1) ;239;1;9;9;0
c6ae48ccb5e809057a2d83888ad9181b2e5bc0ce;Dawit Alemayehu <adawit@kde.org>;10/05/11 13:59;added a new dbus interface, checkforheldslave(qstring), to klauncher to check for whether or not there is io-slave on hold for a given url. review: 101333 ;155;interfac;1;3-TYPE;168;30329f23e2770185913053f1fb7151eca909be64;added new dbus interface checkforheldslave(qstring) klauncher check whether ioslave hold given url ;99;8;46;43;3
cb9e7b1beb31169d23dbad15717cc34b561870e8;Dawit Alemayehu <adawit@kde.org>;28/04/11 14:27;- connect to solid::networking::notifier's shoulddisconnect signal and reset the current pac settings so that a new one will be fetched on the next request. - changed the discovery class to use qhostinfo::localdomainname to retrieve dns domain information instead of using the uname+gethostname+gethostbyname combination. - use qlatin1string for literal text in script.cpp as appropriate. bug: 73765 fixed-in: 4.7 ;414;iter;1;7-TYPE;168;1f71744268f4e18445f41ee2acd86a442041d3dc;connect solid::networking::notifiers shoulddisconnect signal reset current pac settings new one fetched next request changed discovery class use qhostinfo::localdomainname retrieve dns domain information instead using unamegethostnamegethostbyname combination use qlatin1string literal text scriptcpp appropriate ;313;6;170;94;76
18de1f67dec3a55bfb9690930fac55996c99252f;Dawit Alemayehu <adawit@kde.org>;25/04/11 22:06;on redirection, update the proxy script url so that it avoids a catch-22: proxy url retreival require a proxy url! fixes a long long standing bug. bug: 123356 fixed-in: 4.6.3 (cherry picked from commit 32fffc6767d5f93796c804ea5528e404698a0455) ;244;requir;1;7-TYPE;168;714275673d8e3d98377b4d72667b05df9c4c3bc5;redirection update proxy script url avoids catch22: proxy url retreival require proxy url fixes long long standing bug (cherry picked commit 32fffc6767d5f93796c804ea5528e404698a0455) ;183;2;12;10;2
2ea2a9cc17a9ef6f6c6b9e22e270b369a69570fa;Dawit Alemayehu <adawit@kde.org>;23/04/11 15:37;in addition to local protocols, don't look up proxy information if a url has no host component, e.g. the data protocol. ;120;compon;1;7-TYPE;168;c84d6fa26860384661e57d56f56a558934cca257;addition local protocols dont look up proxy information url host component eg data protocol ;92;1;6;4;2
0f4cf41b22bbcbfbb145e1ce3b15ded4e5303c02;Dawit Alemayehu <adawit@kde.org>;05/04/11 18:22;changed to a more reliable system call, getifaddrs, to obtain own ip address instead of relying on gethostname + gethostbyname. on multi-homed systems, try all of the active ipv4 addresses for obtaining the pac file from the dhcp server. review:100964 ;252;reliabl;1;7-TYPE;167;323b2d319b05f31407732972ea9a4013fd706e92;changed more reliable system call getifaddrs obtain ip address instead relying gethostname gethostbyname multihomed systems try active ipv4 addresses obtaining pac file dhcp server ;181;1;378;217;161
c165e4700dc156a20ed793ca72a151a1cd9f5180;Mario Bensi <mbensi@ipsquad.net>;07/03/11 17:31;add networkshare interface - add the networkshare interface to determine the network protocol used. - use this interface in fstab backend to determine if we have a nfs or smb mount point. ;188;interfac;1;7-TYPE;166;529daafab70ccdae546a0e71863d16a47dd87097;add networkshare interface add networkshare interface determine network protocol used use interface fstab backend determine nfs smb mount point ;144;20;460;456;4
d381069cd67459c41826f0ca0ec69f41daada162;Kevin Ottens <ervin@kde.org>;21/03/11 17:08;make it build without nepomuk dependency honor the kio_no_nepomuk flag like the rest of this module. ccmail: peter.penz19@gmail.com ;132;modul;1;11-TYPE;167;bca14a638b1fe1b993f1408a0d33da863bcfd6f6;make build without nepomuk dependency honor kiononepomuk flag rest module ccmail: peterpenz19gmailcom ;102;3;39;36;3
71f9f3dec42c21d9d462483d653bd86c06e935d9;Ben Cooksley <bcooksley@kde.org>;15/02/11 07:30;fix build. kio now uses nepomuk somewhere, so needs soprano includes by extension ;82;extens;1;11-TYPE;166;fa1958e65e543b2168e738c39843e663596ece6b;fix build kio now uses nepomuk somewhere needs soprano includes extension ;74;1;1;1;0
d2a27ef497d46598000b395b1102467d25c83639;Aaron J. Seigo <aseigo@kde.org>;26/12/10 10:42;"only check the config for immutability if we actually have it; immutability() gets called from sethasconfigurationinterface which gets called from appletprivate::init() which meant it was trying to access the configuration group too early, resulting in it being misplaced; for most applets this wouldn't matter, but for applets-in-applets (it's always the sinners) it causes problems bug:261264 svn path=/trunk/kde/kdelibs/; revision=1209283 ";442;interfac;1;9-TYPE;164;7a3e347307f7603f9c3ff4292e002d80b8b35242;check config immutability actually immutability() gets called sethasconfigurationinterface gets called appletprivate::init() meant trying access configuration group early resulting being misplaced applets wouldnt matter appletsinapplets (its always sinners) causes problems ;274;1;2;1;1
3b47b2de55e77c987855db5ac7f27cae9442d2be;David Faure <faure@kde.org>;22/12/10 19:39;"replace hardcoded ""kfmclient openurl"" with ""ask kmimetypetrader for the preferred app for text/html"". it hurts me to allow people to move away from konqueror -- but it's the right thing to do in this layer :) bug: 259426 fixed-in: 4.6 svn path=/trunk/kde/kdelibs/; revision=1208671 ";282;layer;1;11-TYPE;164;cc3e02b53def5529d7dc193adf5eb10cf663313d;replace hardcoded kfmclient openurl ask kmimetypetrader preferred app text/html hurts allow people move away konqueror right thing layer :) ;140;1;20;15;5
35386117c0d35c1f9f1d787a46a3d4dcde5ef160;David Faure <faure@kde.org>;08/12/10 13:35;"further fixes to kdebug: * since kconfig works without a main componentdata nowadays (auto-created by kglobal), make kdebug work pretty much the same in qt-only apps as in kde apps, including obeying kdebugrc settings. the only difference is that area 0 (and unknown areas) are called qappname() rather than main-component-data-name. * update that name when the main component data gets created, even after early kdebugs. * make the handling of unknown numbered areas more consistent (using the settings for area 0) * complete unittest for the ""no component data"" case, in a separate program called by kdebug_unittest. ccmail: mpyne@kde.org svn path=/trunk/kde/kdelibs/; revision=1204637 ";688;compon;1;11-TYPE;163;1f33f3e8b829a5d27087aebf4c94208d7eaa629c;further fixes kdebug: kconfig works without main componentdata nowadays (autocreated kglobal) make kdebug work pretty much same qtonly apps kde apps including obeying kdebugrc settings difference area 0 (and unknown areas) called qappname() maincomponentdataname update name main component data gets created even early kdebugs make handling unknown numbered areas more consistent (using settings area 0) complete unittest component data case separate program called kdebugunittest ccmail: mpynekdeorg ;501;6;180;147;33
84878fd07c7f5c7806e44cf990e501db295908d5;David Faure <faure@kde.org>;26/11/10 01:32;"only use servicetypes from kdelibs so that kdebase isn't required. svn path=/trunk/kde/kdelibs/; revision=1200864 ";114;requir;1;11-TYPE;163;62ff6b79e8389a1de2080d391cb105dcd747b561;use servicetypes kdelibs kdebase isnt required ;47;1;10;6;4
766a17c876b90eb991619f9c42cc4ec0fd61d56b;Andreas Hartmetz <ahartmetz@gmail.com>;20/11/10 19:44;"make the best of webservers sending 304 (not modified) status while telling us that the content is not cacheable in the first place. svn path=/trunk/kde/kdelibs/; revision=1199141 ";180;modifi;1;7-TYPE;163;1ef73ceeb16896b2963e87fa1e04f42e83d9fe6e;make best webservers sending 304 (not modified) status telling content cacheable first place ;93;1;5;4;1
92732caed7312d8e51f19eb6d55223b2af29b323;Luigi Toscano <luigi.toscano@tiscali.it>;14/11/10 16:19;"remove the dependency from the embedded docbook xslt, use our translations this commit introduces the last changes needed to get rid of the old embedded copy of docbook xslt: - make the common includes (kde-common-*xsl.cmake) dependent on the system-provided docbook xslts (i.e. it generates them on the fly during the compilation). - change the macro used to generate manpages to use kde-include-man.xsl instead of the embedded copy of manpages generator (kde-man.xsl has never been used in kde platform 4.x as far as i know). it is worth noting that, on the contrary, kde-include-common.xsl is not used directly (because it is really common to multiple files, here kde-include-man.xsl really replaces the kde-man.xsl). - introduce a small helper program as a dependency for meinproc which will generate, during compile time, two xml files needed in order to make the system working: * all-l10n.xml contains the references to all the system-provided language files for xslt, plus the ones not included upstream but translated in our repository; it is used in place of the system-provided common/l10n.xml * kde-custom-l10n.xml contains the references to the language files containing customizations for system-provided languages (included into the official docbook-xsl). - do not install anymore the files under docbook/xsl (which will be removed) see also: http://kde.markmail.org/thread/as4ctj7kt3raws4q and now let's hope that the whole thing won't explode... ccmail: kde-i18n-doc@kde.org svn path=/trunk/kde/kdelibs/; revision=1196999 ";1539;provid;1;11-TYPE;163;5b9028da362a6a013cf1ef5ccb751ccbed475a20;remove dependency embedded docbook xslt use translations commit introduces last changes needed rid old embedded copy docbook xslt: make common includes (kdecommonxslcmake) dependent systemprovided docbook xslts (ie generates fly during compilation) change macro used generate manpages use kdeincludemanxsl instead embedded copy manpages generator (kdemanxsl never used kde platform 4x far know) worth noting contrary kdeincludecommonxsl used directly (because really common multiple files here kdeincludemanxsl really replaces kdemanxsl) introduce small helper program dependency meinproc generate during compile time two xml files needed order make system working: alll10nxml contains references systemprovided language files xslt plus ones included upstream translated repository used place systemprovided common/l10nxml kdecustoml10nxml contains references language files containing customizations systemprovided languages (included official docbookxsl) install anymore files under docbook/xsl (which removed) see also: now lets hope whole thing wont explode ccmail: kdei18ndockdeorg ;1087;7;349;251;98
20dd13470c8ce0bd1667ba16e916d928dd2e5460;Peter Penz <peter.penz19@gmail.com>;25/10/10 13:41;"provide plugin interface for file item actions. the patch has been written by sebastian trüg and reviewed on http://reviewboard.kde.org/r/5659/ svn path=/trunk/kde/kdelibs/; revision=1189648 ";191;interfac, provid;2;3-TYPE;162;da5fcf02da7edbb52b04f1602e50b354dd1181ef;provide plugin interface file item actions patch written sebastian trüg reviewed ;81;4;143;143;0
79aaf350017312a6d044e2e575f38242fdbdda52;David Faure <faure@kde.org>;25/10/10 13:06;"port khtmlimagepart from deprecated k_export_component_factory to kpluginfactory/k_export_plugin. svn path=/trunk/kde/kdelibs/; revision=1189635 ";145;compon;1;3-TYPE;162;d7cf28bb214e393c25eb2d471f9c3e6bc82ccd66;port khtmlimagepart deprecated kexportcomponentfactory kpluginfactory/kexportplugin ;84;3;43;19;24
d3c71ed4762efb3f95f679f5f81a54ec209b01be;John Layt <john@layt.net>;24/10/10 20:11;"klocale: add country subdivision code setting add a setting to klocale for the iso 3166-2 country level 2 code, i.e. country divisions like states and provinces. for 4.6 this is simply a dumb repository for the value with no validation or translation services provided.  code using the iso-codes project as a source for validation and translation is being developed in kdepimlibs and kdebase and will be moved into kdelibs in 4.7 once the api requirements and dependency implications are better understood. svn path=/trunk/kde/kdelibs/; revision=1189361 ";554;requir, provid;2;6-TYPE;162;97da3e9a60e2466d137e49b1195d70ef39bc6f96;klocale: add country subdivision code setting add setting klocale iso 31662 country level 2 code ie country divisions states provinces 46 simply dumb repository value validation translation services provided code using isocodes project source validation translation being developed kdepimlibs kdebase moved kdelibs 47 once api requirements dependency implications better understood ;382;6;88;88;0
08246f9ab420bf9f3642fb35a31df326d0cbef19;Alex Merry <kde@randomguy3.me.uk>;05/10/10 14:17;"depend on qt 4.7 kdelibs and kdebase in trunk now depend on qt 4.7.  other modules will depend on qt 4.7 as and when they depend on kdelibs 4.6.  do not use qt 4.7-dependent code in modules where the maintainer has decided it should only depend on kdelibs 4.5 and qt 4.6. ccmail: kde-core-devel@kde.org ccmail: kde-devel@kde.org svn path=/trunk/kde/kdelibs/; revision=1182746 ";376;modul, maintain;2;11-TYPE;161;a64696d1d1b64d3bc333ebca18ef8129d71b2bef;depend qt 47 kdelibs kdebase trunk now depend qt 47 modules depend qt 47 depend kdelibs 46 use qt 47dependent code modules maintainer decided depend kdelibs 45 qt 46 ccmail: kdecoredevelkdeorg ccmail: kdedevelkdeorg ;216;1;2;1;1
b38db25bf5580a91d4a4f44e37a259a172c3ade5;Michael Pyne <mpyne@kde.org>;03/10/10 04:26;"overhaul the system-specific lock handling in kshareddatacache. this commit refactors the lock selection, creation, and acquisition/release semantics in kshareddatacache by introducing an interface for the cache locker which is created once at kshareddatacache creation and used from there on out. instead of checking the lock type every time the cache is meant to be locked or unlocked, a quick check is done to ensure that the lock type in the cache didn't somehow change (wrapped in kde_islikely so hopefully essentially instant). profiling revealed no real change in performance. the more important part is that it should be easier to actually add lock handling for e.g. the windows platform. once windows-native locks are supported all we'd need is a mmap wrapper to get rudimentary working support on windows without having to use the kshareddatacache_win.cpp hack. this has been tested using pthread_mutex_t and sem_t under normal usage, my torture suite, libkgame's testbed, a kshareddatacache benchmark from manuel mommertz and a couple of games of kpat. ;) please let me know if i've dorked it up somehow for non-linux/glibc. ccmail:kde-windows@kde.org ccmail:kde-freebsd@kde.org ccmail:kde-mac@kde.org ccmail:kde-solaris@kde.org svn path=/trunk/kde/kdelibs/; revision=1182037 ";1287;interfac;1;8-TYPE;161;e961e56fb4514127730fd53922afa85b4edbb735;overhaul systemspecific lock handling kshareddatacache commit refactors lock selection creation acquisition/release semantics kshareddatacache introducing interface cache locker created once kshareddatacache creation used out instead checking lock type time cache meant locked unlocked quick check done ensure lock type cache didnt somehow change (wrapped kdeislikely hopefully essentially instant) profiling revealed real change performance more important part easier actually add lock handling eg windows platform once windowsnative locks supported wed need mmap wrapper rudimentary working support windows without having use kshareddatacachewincpp hack tested using pthreadmutext semt under normal usage torture suite libkgames testbed kshareddatacache benchmark manuel mommertz couple games kpat ) please know ive dorked up somehow nonlinux/glibc ccmail:kdewindowskdeorg ccmail:kdefreebsdkdeorg ccmail:kdemackdeorg ccmail:kdesolariskdeorg ;943;2;560;405;155
f791e74673278325e1d0ba010bf6f1624cdf0edd;Michael Pyne <mpyne@kde.org>;02/10/10 03:12;"add support for posix semaphores to kshareddatacache. this commit is provided by alberto villa of the freebsd project, and adds support for posix semaphores to the existing pthread mutex support, switchable at compile time and at run time (by run time i mean prior to cache creation -- it's too late afterward). this unfortunately adds a conditional branch to every lock and unlock but that can be eliminated with a bit of code refactoring, which i intend to undertake tonight or tomorrow. the code tests acceptably (both with pthreads and with semaphores forced on) under a kind of ""torture test"" i have devised for the cache, basically consisting of 4 processes hitting the same cache as fast as possible with random data and keys.  i left it for about 15 minutes and recorded no internal consistency errors or memory access violations. here's hoping that is true elsewhere as well. ;) ccmail:avilla@freebsd.org svn path=/trunk/kde/kdelibs/; revision=1181777 ";961;provid;1;8-TYPE;161;38fa6f3b512061093d6e306d74af16f997cf10a0;add support posix semaphores kshareddatacache commit provided alberto villa freebsd project adds support posix semaphores existing pthread mutex support switchable compile time run time (by run time mean prior cache creation late afterward) unfortunately adds conditional branch lock unlock eliminated bit code refactoring intend undertake tonight tomorrow code tests acceptably (both pthreads semaphores forced on) under kind torture test devised cache basically consisting 4 processes hitting same cache fast possible random data keys left 15 minutes recorded internal consistency errors memory access violations heres hoping true elsewhere well ) ccmail:avillafreebsdorg ;674;1;135;107;28
ae408262e7adc06aad5685b7566e0a1e3b9efcbb;Andreas Hartmetz <ahartmetz@gmail.com>;29/09/10 20:51;"ssl: use system ca certificates, so we don't have to maintain our own set. add a kcm to (for now): - disable system-supplied ca certificates - add ca certificates (fot the current user) via gui also make rule finding in kssld more robust, and prune old rules when loading kssld or accessing the respective rule. svn path=/trunk/kde/kdelibs/; revision=1181024 ";359;maintain;1;13-TYPE;161;c1edfb277bddd75ea1d12f6f8072f11b3171e736;ssl: use system ca certificates dont maintain set add kcm (for now): disable systemsupplied ca certificates add ca certificates (fot current user) via gui make rule finding kssld more robust prune old rules loading kssld accessing respective rule ;247;11;986;986;0
943f69d3e9c0257b7e0017aa308ef0a3fb7a1ee6;Dawit Alemayehu <adawit@kde.org>;29/09/10 16:42;"- follow the port restriction rules specified in rfc 2965 section 3.3.4. by default cookies are sent to all ports now. see bug# 149991. - added/modified test cases to test port restriction handling - replaced harded coded generic tld (com, net, etc) with a configurable one specified in the domain_info file. also updated the generic tlds to the current set. - made cookiejar more portable by removing system calls: * replaced the use of fopen with qfile. * replaced strncmp and strncasecmp with their qt equivalents, qstrncmp and qstricmp. this also combats crashes since the qt versions of those system calls does not crash when one of the two input parameters is null. * replaced the remaining use of time with kdatetime. this also solves the last possible causes for the so called y2k38 problem. - improved performance: * use qstringbuilder for string concatenation. * removed the check for the end of an iterator out of the loop statements. - make sure more specific site policies are honored before generic or global ones. bug:14991 svn path=/trunk/kde/kdelibs/; revision=1180984 ";1086;modifi, portabl, iter;3;4-TYPE;161;149cd4132d9c738e38f9f3ca8e2df5c7ba47047c;follow port restriction rules specified rfc 2965 section 334 default cookies sent ports now see bug 149991 added/modified test cases test port restriction handling replaced harded coded generic tld (com net etc) configurable one specified domaininfo file updated generic tlds current set made cookiejar more portable removing system calls: replaced use fopen qfile replaced strncmp strncasecmp qt equivalents qstrncmp qstricmp combats crashes qt versions those system calls crash one two input parameters null replaced remaining use time kdatetime solves last possible causes called y2k38 problem improved performance: use qstringbuilder string concatenation removed check end iterator out loop statements make sure more specific site policies honored before generic global ones ;779;8;739;390;349
300db10138cf5976c8360c1cae6bb5839db16f6f;Kevin Ottens <ervin@kde.org>;27/09/10 16:17;"add a new content type: videobluray. provide implementation for the hal backend. we need the counterpart in the udisks backend now, still that fixes the api as requested in the corresponding br. ccmail: lukas@kde.org bug: 231924 svn path=/trunk/kde/kdelibs/; revision=1180312 ";276;provid;1;10-TYPE;161;5fbf3997de88754ca49221234084adac8f9c2c1f;add new content type: videobluray provide implementation hal backend need counterpart udisks backend now still fixes api requested corresponding br ccmail: lukaskdeorg ;168;2;10;9;1
017506a5b1ef302a109bd88f0c78cc5a9a594dce;Dawit Alemayehu <adawit@kde.org>;18/09/10 17:24;"- improved the way information about each search provider is stored by introducing a new class, kurifiltersearchprovider. - added a method to kurifilterdata to access the details about a search provider using this newly added class. - deprecated the old way of setting information about search providers in kurifilterplugin. svn path=/trunk/kde/kdelibs/; revision=1176781 ";372;provid;1;11-TYPE;161;3d51a886369fd5e0ba6ddc2e4f6de2c71052bfd5;improved way information each search provider stored introducing new class kurifiltersearchprovider added method kurifilterdata access details search provider using newly added class deprecated old way setting information search providers kurifilterplugin ;256;2;282;254;28
f4efa4f0383dc306bdb231a51abe96f2ffc2c2bc;Michael Pyne <mpyne@kde.org>;17/09/10 03:53;"correct the timeout passed to pthread_mutex_timedlock in kshareddatacache. alberto villa of the freebsd project noted while investigating an alternative locking strategy for ksdc on freebsd that the timeout for pthread_mutex_timedlock is an absolute point in time, not the relative 10 seconds i had been passing. this has been working since pthread_mutex_timedlock is not required to check the timeout if the lock can be taken, but it's still wrong. thanks to alberto for the report, i will also backport to kde platform 4.5.2. ccmail:avilla@freebsd.org svn path=/trunk/kde/kdelibs/; revision=1176223 ";601;requir;1;8-TYPE;161;f1c9d4fb6321d725dcd91f8729ce005ee058b206;correct timeout passed pthreadmutextimedlock kshareddatacache alberto villa freebsd project noted investigating alternative locking strategy ksdc freebsd timeout pthreadmutextimedlock absolute point time relative 10 seconds passing working pthreadmutextimedlock required check timeout lock taken still wrong thanks alberto report backport kde platform 452 ccmail:avillafreebsdorg ;380;1;2;1;1
2655602c15b1599e602c6e4fcefa0b2442474a09;David Faure <faure@kde.org>;15/09/10 18:03;"kdebug needs a componentdata to work, since r117132. svn path=/trunk/kde/kdelibs/; revision=1175728 ";100;compon;1;11-TYPE;161;e39d8d97cc0277f02c336eaeb537b8a635621c9b;kdebug needs componentdata work r117132 ;40;1;1;1;0
b8792e241c8d4acdcd86727fb64a914473653b53;Paulo Romulo <paulo.romulo@kdemail.net>;31/08/10 01:38;"using macro_optional_find_package (and macro_log_feature as well) to find hupnp on the system. hupnp is an optional dependency for kdelibs. svn path=/trunk/kde/kdelibs/; revision=1170185 ";187;packag;1;11-TYPE;160;511365fc845a1e12c26107f23952d095daf89ecd;using macrooptionalfindpackage (and macrologfeature well) find hupnp system hupnp optional dependency kdelibs ;110;1;4;2;2
a699a886e77a5b5c2e377940640848c88dbb8fab;Paulo Romulo <paulo.romulo@kdemail.net>;27/08/10 15:32;"removing findhupnp.cmake from the list of cmake modules to be installed. svn path=/trunk/kde/kdelibs/; revision=1168851 ";120;modul;1;11-TYPE;160;b68a5d4e1dbc5bd456442fb65bb207bc526449b0;removing findhupnpcmake list cmake modules installed ;53;1;5;3;2
0776ff407a91b6922365dfd2c5a0a2f848405861;Paulo Romulo <paulo.romulo@kdemail.net>;27/08/10 07:16;"building solid upnp backend by default now. hupnp library required. svn path=/trunk/kde/kdelibs/; revision=1168594 ";115;requir;1;11-TYPE;160;93d7796019036e1e435877dbfe46f609747fbf68;building solid upnp backend default now hupnp library required ;63;3;22;21;1
93d7796019036e1e435877dbfe46f609747fbf68;Paulo Romulo <paulo.romulo@kdemail.net>;27/08/10 07:04;"building solid upnp backend by default now. hupnp library required. svn path=/trunk/kde/kdelibs/; revision=1168592 ";115;requir;1;11-TYPE;160;02ce749453ea3b8480b23d0e5dffcc6ebd9c6dcf;building solid upnp backend default now hupnp library required ;63;12;102;75;27
a2dbee67f87c10c520ffeab39d991285e3834d36;Stephen Kelly <steveire@gmail.com>;17/08/10 12:44;"put the kviewstatemaintainer into kdelibs. svn path=/trunk/kde/kdelibs/; revision=1164671 ";90;maintain;1;10-TYPE;160;2ab386a46f4be1d245ad899d6a175e1cbb10566b;put kviewstatemaintainer kdelibs ;33;3;222;222;0
80b92831c0251919b7f5ba2d36368d2232fbbf95;Peter Penz <peter.penz19@gmail.com>;30/07/10 16:48;"kfilemetainfo (or one of it's used components) is not reentrant. as temporary workaround the access is protected by a mutex. as kfilemetainfo internally uses strigi, it generally should be checked whether it can be assumed that all strigi analyzer implementations are reentrant or whether it should be assured, that at least only one analyzer type can be executed at one time. svn path=/trunk/kde/kdelibs/; revision=1157301 ";424;compon;1;8-TYPE;159;bc95463d2763a9b1fe348eb6cf479d4d98c0e67d;kfilemetainfo (or one used components) reentrant temporary workaround access protected mutex kfilemetainfo internally uses strigi generally checked whether assumed strigi analyzer implementations reentrant whether assured one analyzer type executed one time ;258;1;10;9;1
4354e04bf2c3d3d8b47001f833d7575b9808a343;George Kiagiadakis <kiagiadakis.george@gmail.com>;29/07/10 08:26;"the unix version of kshareddatacache requires linking to pthreads. svn path=/trunk/kde/kdelibs/; revision=1156547 ";114;requir;1;11-TYPE;159;1e257a63c9c84558cf37d0c35720585ed8057c79;unix version kshareddatacache requires linking pthreads ;56;1;1;1;0
6c2cb05c4f21a2dbe8d2b6f99630230bdf2b3fd0;Jonathan Michael Thomas <echidnaman@kubuntu.org>;24/07/10 18:08;"in a qt-only app, kglobal will return a valid (but fake) maincomponent that has a kaboutdata object that does not have a proper name. this means that the existing qt-only fallback present is never triggered, and all qt-only applications will be identified as ""kde"", which in most cases wouldn't be correct. to remedy this, only try getting the name from kaboutdata if kglobal has a real maincomponent by checking kglobal::hasmaincomponent() first. thanks to harald sitter for the patch, for whom i am committing because he left his ssh keys at home svn path=/trunk/kde/kdelibs/; revision=1154099 ";596;compon;1;5-TYPE;159;a8c3897525b1123c4426cd5a806399a209ce942e;qtonly app kglobal return valid (but fake) maincomponent kaboutdata object proper name means existing qtonly fallback present never triggered qtonly applications identified kde cases wouldnt correct remedy try getting name kaboutdata kglobal real maincomponent checking kglobal::hasmaincomponent() first thanks harald sitter patch committing left ssh keys home ;361;1;14;8;6
7db2358c588827d2c359fcb96d5fe9dd160694d3;David Nolden <david.nolden.kde@art-master.de>;15/07/10 21:44;"make katetexttextbuffer::rangesforline much faster, by making all required information available through non-virtual functions and using those. use binary search in katetextbuffer::blockforline. svn path=/trunk/kde/kdelibs/; revision=1150413 ";242;requir;1;13-TYPE;159;36f0211d326fe28b4d7762a78b0f6be2738dd53d;make katetexttextbuffer::rangesforline much faster making required information available through nonvirtual functions using those use binary search katetextbuffer::blockforline ;177;4;62;55;7
a528183c2eb781575097299613929d7aef0c42b2;Stephen Kelly <steveire@gmail.com>;29/06/10 14:22;"port to kvoidpointerfactory. svn path=/trunk/kde/kdelibs/; revision=1144239 ";76;interfac;1;3-TYPE;158;640e447a8ad67b5958604493b45f1b4301901cdb;port kvoidpointerfactory ;25;1;48;24;24
8220f00a5940df507d535234196d5653bcaae00f;Vishesh Handa <handa.vish@gmail.com>;08/06/10 13:04;"major upgrade - * the concept of proxies has been completely removed. resourcedata now keeps a list of resources that contain it * resourcedata::determineuri has been significantly modified. it now returns a resourcedata* * the two kickoff lists (one for urls and the other for strings) have been merged. the strings are stored as invalid urls * resourcedata's internal kickoffuri & kickoffid have been merged. resourcedata now contains a set of all the properties by which it can be initialized * the invalidatecache issue has been fixed by updating the kickoff list on addition/removal of properties * the resourcedata::remove issue has been fixed. it no longer needs to determine all the uris. * resourcedataprivate::determinealluris is no longer required, and has hence been removed. ccmail: nepomuk@kde.org svn path=/trunk/kde/kdelibs/; revision=1135943 ";859;requir, modifi;2;8-TYPE;157;3b8dde858b54e0e8fa7f9b9f43a5a941a7bee961;major upgrade concept proxies completely removed resourcedata now keeps list resources contain resourcedata::determineuri significantly modified now returns resourcedata two kickoff lists (one urls strings) merged strings stored invalid urls resourcedatas internal kickoffuri kickoffid merged resourcedata now contains set properties initialized invalidatecache issue fixed updating kickoff list addition/removal properties resourcedata::remove issue fixed longer needs determine uris resourcedataprivate::determinealluris longer required hence removed ccmail: nepomukkdeorg ;575;7;885;396;489
ae80c992876029e9357800e8be1a15135497be40;Marco Martin <notmart@gmail.com>;04/06/10 12:40;"extender items can't return to source if the desktop is locked bug:215230 svn path=/trunk/kde/kdelibs/; revision=1134489 ";121;extend;1;8-TYPE;157;0e728b01a130adc56d8f6e76c928f35be8e54051;extender items cant return source desktop locked ;49;1;3;2;1
4e892485cbe24fd960b73d80d6cd22c534e20701;Maks Orlovich <maksim@kde.org>;12/05/10 01:11;"port khtml over to scriptableextension. scripting confirmed to still work with nspluginviewer via the adapter... will do some additional testing with kjas and kmplayer shortly. svn path=/trunk/kde/kdelibs/; revision=1125704 ";224;adapt, extens, layer;3;3-TYPE;156;036d21967a8eeb3c2d61e9e7f15347687fb42c3e;port khtml over scriptableextension scripting confirmed still work nspluginviewer via adapter additional testing kjas kmplayer shortly ;135;11;407;172;235
93fba871fc129830867dc85b4dd6238d598530b3;Sebastian Trueg <sebastian@trueg.de>;03/05/10 07:55;"adding a set of new methods to comparisonterm which provide some nice query features: - setaggregatefunction() allows to count, sum, and so on the results instead of returning the actual values. - setvariablename allows to include the matched values in the final results - as such it is a more generic variant of query::addrequestproperty. - setsortweight allows to change the sorting of the results in the final query including a sort order. these new methods introduce a new level of power in the query api which i hope more people than the telepathy devels and me will appreciate. also one little new operator from soprano is needed, thus, the new soprano 2.4.63 dependancy. but it is monday after all... svn path=/trunk/kde/kdelibs/; revision=1122110 ";755;provid;1;11-TYPE;156;0225d2895a6f260aa918370e66db483c7d85cf7f;adding set new methods comparisonterm provide nice query features: setaggregatefunction() allows count sum results instead returning actual values setvariablename allows include matched values final results such more generic variant query::addrequestproperty setsortweight allows change sorting results final query including sort order new methods introduce new level power query api hope more people telepathy devels appreciate one little new operator soprano needed thus new soprano 2463 dependancy monday ;508;13;811;771;40
7a0dba8bbf53266d01afef9b50fa9374bf383565;Christoph Cullmann <cullmann@kde.org>;23/04/10 20:22;"dhaumann: remove katedocument::newtextrange/cursor in favor of movinginterface let's try to only use ktexteditor interfaces to keep coupling low. svn path=/trunk/kde/kdelibs/; revision=1118078 ";193;interfac;1;13-TYPE;156;04ab62e1bedfe797f8d3bb21f9f98fef49ae5c2b;dhaumann: remove katedocument::newtextrange/cursor favor movinginterface lets try use ktexteditor interfaces keep coupling low ;127;9;103;48;55
e1fd28014783dee52ff32f0813d7a62023c23ad3;Christoph Cullmann <cullmann@kde.org>;19/04/10 19:44;"start to draft a ktexteditor interface for the movingcursor and movingrange, still in the childhood ;) only minimal subset of functions non-virtual convenience functions should be added to kte interface to have all people benefiting from them difference to old smart* stuff: less implementation details shown to public, no data members in the interface only absolute minimal interface needed to implement cursors, more for ranges, for sure, as they feature more stuff, like highlighting attributes the headers are not installed by purpose, we will do so if api is bc or at least doesn't change too frequently, but before 4.5 svn path=/trunk/kde/kdelibs/; revision=1116573 ";672;interfac;1;9-TYPE;156;a0edfe12a583135933ae151e733411cfde2f0ea0;start draft ktexteditor interface movingcursor movingrange still childhood ) minimal subset functions nonvirtual convenience functions added kte interface people benefiting difference old smart stuff: less implementation details shown public data members interface absolute minimal interface needed implement cursors more ranges sure feature more stuff highlighting attributes headers installed purpose api bc doesnt change frequently before 45 ;445;11;647;548;99
5d43f4462b4f24ffdd00f62f86e7019e8b473efd;Michael Jansen <kde@michael-jansen.biz>;28/03/10 21:33;"change the signal about triggered global shortcuts from a broadcast one to a component specific location. prevents all application handling global shortcuts from waking up whenever a global shortcut is pressed. even if it belongs to another app. svn path=/trunk/kde/kdelibs/; revision=1108432 ";293;compon;1;8-TYPE;155;87bdc6fa0079531cec5ab2b2232c95d390377520;change signal triggered global shortcuts broadcast one component specific location prevents application handling global shortcuts waking up whenever global shortcut pressed even belongs another app ;198;5;87;64;23
b8b760c07d9ca7d70873029d93809c2c2a87cf14;Frederik Gladhorn <gladhorn@kde.org>;26/03/10 11:39;"change the engine to not automatically load data, emit a signal when the providers are ready instead svn path=/trunk/kde/kdelibs/; revision=1107667 ";148;provid;1;8-TYPE;155;8ad41adec719b221549a63147311af028fe7e23f;change engine automatically load data emit signal providers ready instead ;74;8;37;25;12
a435500435d0f5acdbe46eab1aeec9b60b3df9e2;Aaron J. Seigo <aseigo@kde.org>;23/03/10 22:43;"allow loading of individual runners, including from packages svn path=/trunk/kde/kdelibs/; revision=1106782 ";108;packag;1;5-TYPE;155;718ef90d6a9c144035ec2c57687274bb2101e5c5;allow loading individual runners including packages ;52;6;263;181;82
332fb1da96d2d2c864cf43bafb9eed7db497a548;Peter Penz <peter.penz19@gmail.com>;23/03/10 13:15;"although kfilemetadataprovider guarantees that kloadmetafilemetadatathread::load() or kloadmetafilemetadatathread::data() is not invoked during the execution of the thread, it is a must to protect the shared data. svn path=/trunk/kde/kdelibs/; revision=1106627 ";261;provid;1;9-TYPE;155;c252c3d41abf26dc69fa38e7b30fd1adb5c4de2a;although kfilemetadataprovider guarantees kloadmetafilemetadatathread::load() kloadmetafilemetadatathread::data() invoked during execution thread protect shared data ;166;2;32;24;8
2ea8797a918e93469a8b4f2d1d83128ff89cab42;Pino Toscano <pino@kde.org>;19/03/10 12:57;"add kmemoryinfo, a small class to provide memory information of the current system this small class can be used to query the current os the information about its memory status (eg total memory, free memory, etc). currently provides a real implementation for linux (using sysinfo()) and for windows (by patrick spendrin, using globalmemorystatusex()); for the remaining oses there's a null implementation which always fails. imcluded a small unit test for the basic work (so new os implementations can be helped in testing) and a benchmark for the update() function. svn path=/trunk/kde/kdelibs/; revision=1105176 ";613;provid;1;10-TYPE;155;dabc0edf1ac1a9b69950ef3a343111619763ded4;add kmemoryinfo small class provide memory information current system small class used query current os information memory status (eg total memory free memory etc) currently provides real implementation linux (using sysinfo()) windows (by patrick spendrin using globalmemorystatusex()) remaining oses theres null implementation always fails imcluded small unit test basic work (so new os implementations helped testing) benchmark update() function ;448;7;458;458;0
4e0792b9d1918733c048b1cce5089aa3c29f307f;Aaron J. Seigo <aseigo@kde.org>;09/03/10 05:11;"guard against multiple connections due to errant startupcompleted constraints svn path=/trunk/kde/kdelibs/; revision=1100976 ";125;constraint;1;8-TYPE;154;9268820ac90c0deab2af14b8488052fbe150b2a6;guard against multiple connections due errant startupcompleted constraints ;75;1;10;5;5
034f5139ee7399e994b56b262f9aa9967a130872;Friedrich W. H. Kossebau <kossebau@kde.org>;25/02/10 01:02;"added: new solid backend for upnp devices like mediaservers and gateways (initial code dump, prealpha, but should be crashfree) first additional backend, now that kevin made it already possible, beating the bluetooth metalworkers :) (kevin knows how to motivate). reuses the upnp controlpoint code from the network:/ kio-slave (duplicating the code for now, will be resolved later) needs coherence v0.6.5 at least (with d-bus service file, some packages miss this, e.g. the default opensuse one) ccmail:kde-hardware-devel@kde.org svn path=/trunk/kde/kdelibs/; revision=1095786 ";577;packag;1;7-TYPE;154;a6bc1add2658424856bcec5549e419d3cfaa31e7;added: new solid backend upnp devices mediaservers gateways (initial code dump prealpha crashfree) first additional backend now kevin made already possible beating bluetooth metalworkers :) (kevin knows motivate) reuses upnp controlpoint code network:/ kioslave (duplicating code now resolved later) needs coherence v065 (with dbus service file packages miss eg default opensuse one) ccmail:kdehardwaredevelkdeorg ;414;24;1990;1989;1
ab739fdf73f6f79e1c736a28aeceb3414c0ae99f;Milian Wolff <mail@milianw.de>;25/01/10 17:46;"don't lock mutex when not required svn path=/trunk/kde/kdelibs/; revision=1080134 ";82;requir;1;8-TYPE;153;67f4dfa3b8ca78614b32520c7acbf9fa7715b04a;dont lock mutex required ;25;1;4;2;2
78a3eef12c3befc54379d39104e0cc05c588ad8d;John Layt <john@layt.net>;23/01/10 22:39;"switch kcalendarsystem to use a shared-d architecture. see reviewboard http://reviewboard.kde.org/r/2557/ svn path=/trunk/kde/kdelibs/; revision=1079251 ";153;architectur;1;14-TYPE;153;531bae995b6611657852ba431bac73f35a22f6d2;switch kcalendarsystem use sharedd architecture see reviewboard ;64;23;499;385;114
81c328cc4342325eb2ff719e963a5306500982e2;Andreas Hartmetz <ahartmetz@gmail.com>;15/01/10 21:30;"new scheduler based on qmaps instead of lists to find stuff. it also generally puts stuff where it intends to find it later instead of figuring out everything again and again on every job start or other operation. per host and per protocol connection limits are enabled by default and there is no way to turn them off, currently. there are now twenty priority levels for jobs. hopefully khtml and friends can put them to good use and ditch their own scheduling code more or less. a regression is that deadlocks due to the limited connection numbers are currently possible, but this is fixable. this has not caused me any problems so far. on the upside, a 100% cpu usage while not loading pages bug that has been reported on irc should be fixed. here is the list of commits i kept in git-svn: - first checkin of new scheduler code - fix the build - add serialpicker, remove a lot of old code - start connected slaves implementation - some more work on finishing a job, removed a lot of old code - start work on staggered starting of jobs - some work on creating slaves and starting jobs - squirrels [edit: this added a method originally called dopleasefetchraresquirrelporn() which is now called startajob :)] - more work on connected slaves, some cleanups, compile - compile: run moc on both scheduler.cpp and scheduler.h - different names for different things - more work on connected ioslaves. maybe 60% there now... - fix a few of the first crashes found during real testing - implement allslaves() everywhere to account for all slaves, plus small stuff - reap idle slaves - delete all slaves when shutting down, hopefully - delete *and kill* all slaves when shutting down - set pid to zero after kill so we only kill something once! - maybe-finished connected slave support, some cleanup - move ""internal"" class definitions to private header file - initialize idle time variable of ioslave - start idle time when slave starts idling - simplify the scattered job-done logic, kill more slaves - observe per host and per protocol connection number limits. yay! - use provided job argument, do not try to get the job from the slave which will not work. - make removeslave() work, hopefully - compile - add much debug output, remove job from regular queue when assigning to connected slave. - fix removing jobs and robustify host connection limits logic - fix connected slave starting and removal; involves not taking the running job off the list. - implement changejobpriority(), add more checks to connectedslavequeue::removejob() - fix checking whether the job has a properly assigned serial number, and make schedulejob() decrease (not increase) the logical priority - oops, i did not want to commit this include addition. - always set the slave's job to null when finishing the job one way or another - sort out the putslaveonhold / finishing a job twice mess - add diagnostic code and fix job accounting bug due to changing url - use the new kprotocolinfo::maxslavesperhost(). cool! - compile -_- - in ""release""  mode, omit an assertion that may fail due to a rare non-error. - improve comment about ""fake death"" of on-hold slaves - improve again comment about ""fake death"" of on-hold slaves - ensure that maxslavesperhost is compatible with maxslaves - debug output to see why jobs don't start, and make sure that connection limits are always > 0. - remove useless comment - possibly correct version of ""held slaves"" assignment to jobs. - remove unused debug_info() method svn path=/trunk/kde/kdelibs/; revision=1075343 ";3526;provid;1;10-TYPE;153;cca208a7e6e8a9fee62ec97947cbee3fbfb268b1;new scheduler based qmaps instead lists find stuff generally puts stuff intends find later instead figuring out everything again again job start operation per host per protocol connection limits enabled default way turn currently now twenty priority levels jobs hopefully khtml friends put good use ditch scheduling code more less regression deadlocks due limited connection numbers currently possible fixable caused problems far upside 100 cpu usage loading pages bug reported irc fixed here list commits kept gitsvn: first checkin new scheduler code fix build add serialpicker remove lot old code start connected slaves implementation more work finishing job removed lot old code start work staggered starting jobs work creating slaves starting jobs squirrels edit: added method originally called dopleasefetchraresquirrelporn() now called startajob :) more work connected slaves cleanups compile compile: run moc both schedulercpp schedulerh different names different things more work connected ioslaves maybe 60 now fix few first crashes found during real testing implement allslaves() everywhere account slaves plus small stuff reap idle slaves delete slaves shutting down hopefully delete kill slaves shutting down set pid zero kill kill something once maybefinished connected slave support cleanup move internal class definitions private header file initialize idle time variable ioslave start idle time slave starts idling simplify scattered jobdone logic kill more slaves observe per host per protocol connection number limits yay use provided job argument try job slave work make removeslave() work hopefully compile add much debug output remove job regular queue assigning connected slave fix removing jobs robustify host connection limits logic fix connected slave starting removal involves taking running job list implement changejobpriority() add more checks connectedslavequeue::removejob() fix checking whether job properly assigned serial number make schedulejob() decrease (not increase) logical priority oops want commit include addition always set slaves job null finishing job one way another sort out putslaveonhold / finishing job twice mess add diagnostic code fix job accounting bug due changing url use new kprotocolinfo::maxslavesperhost() cool compile release mode omit assertion fail due rare nonerror improve comment fake death onhold slaves improve again comment fake death onhold slaves ensure maxslavesperhost compatible maxslaves debug output see jobs dont start make sure connection limits always 0 remove useless comment possibly correct version held slaves assignment jobs remove unused debuginfo() method ;2643;7;1745;954;791
7878da4d2b5d9ec4cda87242074928f8a6afac56;Alexander Neundorf <neundorf@kde.org>;06/01/10 22:22;"-introduce imported targets for the various qt4 libraries, so we can handle the release- and debug-libraries finally properly. tested on my machine with linux with kdelibs, kdeutils and some other module, and also tested under windows by saro. if you suddenly get strange linking-related errors with qt4 libraries, please let me know asap. this should also help the installation of kde under windows, since with these imported qt libraries the location of the qt-libraries is not fixed at kdelibs-buildtime anymore (for the installed dependencies-file), but determined at 3rd-party cmake-time. so different locations of qt on a windows-development machine should be no problem anymore. (i'd like to have some feedback on this ) alex ccmail: kde-windows@kde.org ccmail: kde-buildsystem@kde.org ccmail: <ps_ml@gmx.de> svn path=/trunk/kde/kdelibs/; revision=1070849 ";863;modul;1;3-TYPE;152;db5447c0a2600306542eb764984ebf59e64ca08d;introduce imported targets various qt4 libraries handle release debuglibraries finally properly tested machine linux kdelibs kdeutils module tested under windows saro suddenly strange linkingrelated errors qt4 libraries please know asap help installation kde under windows imported qt libraries location qtlibraries fixed kdelibsbuildtime anymore (for installed dependenciesfile) determined 3rdparty cmaketime different locations qt windowsdevelopment machine problem anymore (id feedback ) alex ccmail: kdewindowskdeorg ccmail: kdebuildsystemkdeorg ccmail: psmlgmxde ;568;1;57;27;30
db5447c0a2600306542eb764984ebf59e64ca08d;Alexander Neundorf <neundorf@kde.org>;06/01/10 22:17;"-setting quietly manually is not necessary, this is handled automatically by find_package_handle_standard_args() -the first argument to find_package_handle_standard_args() should be the exact-case name of the find-module, i.e. ""libattica"", not ""libattica"" frederik: if you really want to see this as ""libattica"", then the module has to be renamed to ""findlibattica.cmake"", which is also ok and we still have the time to do it since this file has not been part of a release yet. alex ccmail: <gladhorn@kde.org> ccmail: <vkrause@kde.org> svn path=/trunk/kde/kdelibs/; revision=1070847 ";583;packag, modul;2;3-TYPE;152;276fb1f30a2c5d318334fe2bc386bcdb9e791ab2;setting quietly manually necessary handled automatically findpackagehandlestandardargs() first argument findpackagehandlestandardargs() exactcase name findmodule ie libattica libattica frederik: really want see libattica module renamed findlibatticacmake ok still time file part release alex ccmail: gladhornkdeorg ccmail: vkrausekdeorg ;337;1;10;2;8
7e3122a476d51ae88a03ddf71488beca113f043f;Frederik Gladhorn <gladhorn@kde.org>;03/01/10 23:02;"make sure that providers always return the right search parameters and also use the same in the cache. much more robust and fixes some cache issues with searches. svn path=/trunk/kde/kdelibs/; revision=1069638 ";210;provid;1;8-TYPE;152;625c4b1b3b17ac8a290c2664e4bcc441cc7ee45e;make sure providers always return right search parameters use same cache much more robust fixes cache issues searches ;118;11;213;111;102
0f2bd07a131d4c5269998d84f2aceac6184dd541;Alexander Neundorf <neundorf@kde.org>;25/11/09 23:39;"-add support for the components keyword, so we can specifiy which components are required (plugin_raptorparser and plugin_redlandbackend for kdelibs) alex ccmail: trueg@kde.org ccmail: kde-buildsystem@kde.org svn path=/trunk/kde/kdelibs/; revision=1054394 ";256;requir, compon;2;5-TYPE;151;bd10fc3093b5ec9bd39b110d184c85845f8e5dc1;add support components keyword specifiy components required (pluginraptorparser pluginredlandbackend kdelibs) alex ccmail: truegkdeorg ccmail: kdebuildsystemkdeorg ;164;1;106;52;54
d57beaf0fd505db7bb78a10b78905622ee98aba7;Michel Ludwig <michel.ludwig@gmail.com>;15/11/09 12:51;"add the 'ktexteditor::document' extension interface 'parameterizedsessionconfiginterface' which allows for more fine-grained control over the manipulated settings. this interface is meant to be an extension of 'ktexteditor::sessionconfiginterface'. svn path=/trunk/kde/kdelibs/; revision=1049556 ";296;interfac, extens;2;1-TYPE;151;4646b4f08174625713d43dd50ea138b4b383d7da;add ktexteditor::document extension interface parameterizedsessionconfiginterface allows more finegrained control over manipulated settings interface meant extension ktexteditor::sessionconfiginterface ;202;6;199;175;24
4b05d520ec8923b3abc17cdbef8e1d09e57de636;Frederik Gladhorn <gladhorn@kde.org>;03/11/09 19:44;"implement server side sorting, this does not take into account the different providers svn path=/branches/work/knewstuffrefactor/knewstuff3/; revision=1044444 ";159;provid;1;4-TYPE;150;80f4bef510a7d0b4db1c2bc30dd1107385c4adb7;implement server side sorting take account different providers ;63;8;295;89;206
282c024f287daa4fe7e23f977d1a2c8860df55ec;Frederik Gladhorn <gladhorn@kde.org>;30/10/09 14:14;"implement filtering in static provider svn path=/branches/work/knewstuffrefactor/knewstuff3/; revision=1042704 ";111;provid;1;10-TYPE;150;da87f8b3026dae5456bb0f36b13fe2e57245c795;implement filtering static provider ;36;4;73;46;27
b72f394adc05fead42c53062a451834f58c5fb3c;Jeremy Paul Whiting <jpwhiting@kde.org>;13/10/09 02:39;"moved providerloader into generic xml loader class, fixed loadproviders, so downloaddialog test at least shows, still some work to do to get data showing, and get modality working like it was svn path=/branches/work/knewstuffrefactor/knewstuff3/; revision=1034558 ";264;provid;1;6-TYPE;150;16bac1b5ab8164efdd62f167bc55d09eb0e46dd7;moved providerloader generic xml loader class fixed loadproviders downloaddialog test shows still work data showing modality working ;133;11;596;358;238
16d05ea10020b137d7e695206975dbad8722d726;Alexander Neundorf <neundorf@kde.org>;04/10/09 17:13;"strigi is required for building kdelibs jos: strigi is a hard requirement for kdelibs, i.e. not optional , right ? alex ccmail: <jvdoever@gmail.com> svn path=/trunk/kde/kdelibs/; revision=1031307 ";196;requir;1;11-TYPE;149;5f71e0080ad3ed3e4f6d7307c9ddccd4fd6c724a;strigi required building kdelibs jos: strigi hard requirement kdelibs ie optional right alex ccmail: jvdoevergmailcom ;118;1;2;1;1
ed248dfaba0cf712668d9eb8c08de9ccb10b4441;David Faure <faure@kde.org>;02/10/09 15:40;"use the -same- mutex for klocale and klocalizedstring, since they both call each other. svn path=/trunk/kde/kdelibs/; revision=1030572 ";135;localiz;1;8-TYPE;149;3734863b8bc238ef6e1cdf57e7053b2d0f7bdae2;use same mutex klocale klocalizedstring both call each ;55;3;66;38;28
c843c2f349e14d31732f3beb6ebb591e04780a96;Dario Freddi <drf@kde.org>;15/09/09 09:42;"implementing a new feature in .actions file: [domain]. this provides much better feedback for authentication and management of the actions svn path=/trunk/kde/kdelibs/; revision=1023708 ";186;provid;1;13-TYPE;149;ca2dfbb91ad3ba84c53885fba47dd939f83fd88b;implementing new feature actions file: domain provides much better feedback authentication management actions ;110;5;47;40;7
2730ad06c91ef479d4c74070b052f34e4981f7c6;Aaron J. Seigo <aseigo@kde.org>;07/09/09 22:36;"* if no config group is provided, use the app global one (compat with krunner, allows comfortable usage with e.g. plasmoids) * allow setting the applet whitelist programmaticaly vs touching the config file directly svn path=/trunk/kde/kdelibs/; revision=1021048 ";262;provid;1;5-TYPE;148;c21b6547c05caaf3e671cd1af2d6507bd3b67894;config group provided use app global one (compat krunner allows comfortable usage eg plasmoids) allow setting applet whitelist programmaticaly vs touching config file directly ;176;2;71;59;12
a83734ff2da3aca17b69b3ac58a44833397db4b2;Dario Freddi <drf@kde.org>;31/08/09 17:13;"fix modules svn path=/trunk/kde/kdelibs/; revision=1017843 ";59;modul;1;6-TYPE;148;68059c9b9ad1a2a96717703f2ace1bd647ba29df;fix modules ;12;1;2;2;0
099a67cc4271f481625015ab67cd9253adb90934;Peter Penz <peter.penz19@gmail.com>;30/08/09 21:08;"svn_silent: remove obsolete comment. using nepomuk in this context does not work as required from a performance point of view. svn path=/trunk/kde/kdelibs/; revision=1017540 ";174;requir;1;13-TYPE;148;e5ec8106e308d7071ae739c6db4d3b2c7b175865;svnsilent: remove obsolete comment using nepomuk context work required performance point view ;94;1;3;0;3
c364f8d28307a5fb849f48d1abc4259df9fc5725;David Faure <faure@kde.org>;20/08/09 21:09;"mimetype determination: fix glob matching according to discussion on xdg list, so that *.c, *.c and core are strictly case-sensitive-only. this fixes the case of ""foo.ps.gz"", which the previous algorithm would treat as ""simply gzip"", and it makes the matching of mixed-case extensions like ""textfile.txt"" 3 times faster (qbenchmark+callgrind rocks). this commit does -not- require the next release of shared-mime-info; we emulate what it will output i.e. force those three hardcoded globs to case-sensitive if shared-mime-info is <= 0.60 (which is the case for everyone right now), to avoid regressions. bug: 198477 svn path=/trunk/kde/kdelibs/; revision=1013836 ";663;requir, extens;2;11-TYPE;148;7d1b66907aa9e20b274f4a52404cb39430cced72;mimetype determination: fix glob matching according discussion xdg list c c core strictly casesensitiveonly fixes case foopsgz previous algorithm treat simply gzip makes matching mixedcase extensions textfiletxt 3 times faster (qbenchmarkcallgrind rocks) commit require next release sharedmimeinfo emulate output ie force those three hardcoded globs casesensitive sharedmimeinfo 060 (which case everyone right now) avoid regressions ;433;8;182;119;63
1966847018b4e29b4e7ad9e88a9bfa22dd6facd1;Allen Winter <winter@kde.org>;25/07/09 11:36;"the x screensaver lib is required by kidletime svn path=/trunk/kde/kdelibs/; revision=1002216 ";94;requir;1;11-TYPE;147;2d9bef71688e095b254a0feda93bb5f3cd0357bb;x screensaver lib required kidletime ;37;1;2;1;1
483cad8e50af4202d1272e414eb2950885dd8cfd;Michel Ludwig <michel.ludwig@gmail.com>;16/07/09 08:55;"be more careful when deleting ranges: remove the watcher first as otherwise lists that are currently being iterated through can be modified through 'rangedeleted'. svn path=/trunk/kde/kdelibs/; revision=997664 ";210;modifi, iter;2;8-TYPE;147;0bdd944a3d87d6ad2b37c8be443fd313f6745869;more careful deleting ranges: remove watcher first otherwise lists currently being iterated through modified through rangedeleted ;130;1;24;17;7
4041c3f4c64aab2425bf9ab035bc4e4f466c6481;David Faure <faure@kde.org>;06/07/09 17:37;"provide a way to know where a downloaded file came from (will be used by nepomuk). in details this means - passing kparts::openurlarguments to saveurl (overload of the previously named simplesave) so we can find out the referrer - remove code duplication between browserrun and khtml, and keep the best of both pieces of code: * overwrite confirmation was missing in the browserrun method * saving http://www.kde.org/foo/ would suggest ""foo"" as filename (fixed) * some metadata was missing in the browserrun method, like ""use http cache if possible"" ccmail: sebastian@trueg.de svn path=/trunk/kde/kdelibs/; revision=992359 ";623;provid;1;10-TYPE;146;b6675a98ad24f0ed374c322f86484bd38d42faab;provide way know downloaded file came (will used nepomuk) details means passing kparts::openurlarguments saveurl (overload previously named simplesave) find out referrer remove code duplication between browserrun khtml keep best both pieces code: overwrite confirmation missing browserrun method saving suggest foo filename (fixed) metadata missing browserrun method use http cache possible ccmail: sebastiantruegde ;416;4;124;111;13
24edd42be59608e7839848448f8bafb5c6c1d898;David Faure <faure@kde.org>;06/07/09 17:27;"provide a way for kioslaves to specify the user-visible ""type"" of an item (where it was currently always the item's mimetype description). requested by sebastian trueg for kio_nepomuksearch. svn path=/trunk/kde/kdelibs/; revision=992349 ";237;provid;1;10-TYPE;146;49f958c6b9c5894cc362dbdafee0df08388068b4;provide way kioslaves specify uservisible type item (where currently always items mimetype description) requested sebastian trueg kionepomuksearch ;147;3;21;16;5
d4a5cb235103c2356092afbf4121cdc9addf1311;Nicola Gigante <nicola.gigante@gmail.com>;05/07/09 23:01;"in this massive commit, i've redesigned from scratch the helper architecture to support some new features: - flexible data communication from the helper - an api to execute multiple actions with a single request - an elegant way to receive signals from the helper, without making action a qobject. i've added an actionwatcher class. the only way to obtain an instance of it is with the member watcher() of an action object. it'll return an object that you can use to connect to the signals from the helper. to support this, i had to include a way to know which action a signal was about, but this has not much sense if the helper knows only about one action at the time, so i've added the support for multiple actions. with one call to action::executeactions(), one can execute a list of actions in a single shot. currently, the helper executes them sequentially, but now, every signal that it sends has the knowledge of which action it's about. this is how the helperproxy decide which actionwatcher should emit the signal to the user. single asynchronous calls are possibile with the convenience method executeasync(). it has two parameters to simply connect the actionperformed() slot without having to use the watcher if you don't need it. if any of the two parameters are null, the action is performed but no signal is delivered (if you don't use a watcher yourself, of course) single synchronous calls are still possible with execute(), which behaves exactly as before. svn path=/trunk/playground/base/libkauth/; revision=991906 ";1535;architectur;1;15-TYPE;146;ea061c9c7d82a7f591556ff57c9ba589c20bfa2f;massive commit ive redesigned scratch helper architecture support new features: flexible data communication helper api execute multiple actions single request elegant way receive signals helper without making action qobject ive added actionwatcher class way obtain instance member watcher() action object itll return object use connect signals helper support include way know action signal much sense helper knows one action time ive added support multiple actions one call action::executeactions() one execute list actions single shot currently helper executes sequentially now signal sends knowledge action helperproxy decide actionwatcher emit signal user single asynchronous calls possibile convenience method executeasync() two parameters simply connect actionperformed() slot without having use watcher dont need two parameters null action performed signal delivered (if dont use watcher yourself course) single synchronous calls still possible execute() behaves exactly before ;984;18;563;401;162
534a354adda147bbcbeadf00bac28676c7ad8fd8;Allen Winter <winter@kde.org>;16/06/09 15:29;"do not permit optional building of nepomuk libs. all libs should be built, if the dependency requirements are met. svn path=/trunk/kde/kdelibs/; revision=982677 ";161;requir;1;11-TYPE;146;1a9808b8446bb57e976690d34b874ee15bb23cfa;permit optional building nepomuk libs libs built dependency requirements met ;77;1;2;1;1
29abd72d4f1553b543317b6cd2de7165137d30b6;David Faure <faure@kde.org>;27/05/09 20:48;"fix crash when starting konqueror as a new user. ksycoca was waiting for kbuildsycoca's dbus signal using a nested event loop, during which konq's autosaving-session-timer fired, which used a kio job, which needed ksycoca... boom. thiago provided the solution: block on a qprocess instead. but in fact we already did that (in ktoolinvocation::startkdeinit), and kdeinit4 only returns after kbuildsycoca4 has run, so just removing the nested event loop fixes it. svn path=/trunk/kde/kdelibs/; revision=973805 ";508;provid;1;8-TYPE;145;9082733d0a2f8c52055668bb222186c3102c9d13;fix crash starting konqueror new user ksycoca waiting kbuildsycocas dbus signal using nested event loop during konqs autosavingsessiontimer fired used kio job needed ksycoca boom thiago provided solution: block qprocess instead fact already (in ktoolinvocation::startkdeinit) kdeinit4 returns kbuildsycoca4 run removing nested event loop fixes ;344;1;12;5;7
0ba7b04d006d412524ca7af0604f84c04a921a79;Andreas Hartmetz <ahartmetz@gmail.com>;18/05/09 16:34;"these modules don't work; disable them so they don't confuse people and to be able to remove a few files from the build in kio/kssl svn path=/trunk/kde/kdelibs/; revision=969644 ";178;modul;1;6-TYPE;145;7669f38ae336e709061d2f97820bfd3b04478332;modules dont work disable dont confuse people remove few files build kio/kssl ;78;1;4;2;2
56e67f115a51608d846ccae524bf75bb9bbe4651;Germain Garand <germain@ebooksfrance.org>;18/05/09 05:00;".use the normal cache policy for all objects during soft reloads, not just for images. this will let kio use 'if-modified-since' conditional queries when appropriate. .don't trust the cache's expiry date when soft-reloading - always send conditional queries to revalidate instead. .only check the completed state of a part when an object that was signaled to be loaded is actually part of our descendant chain. checking  that for ancestors requests (or even other process-wide documents) is wasteful. shouldn't this check even be limited to objects requested strictly by the document, and not its children? i wonder.. bug: 137720 svn path=/trunk/kde/kdelibs/; revision=969350 ";676;modifi;1;8-TYPE;145;670e1dc672e891a6145fc138ce0dcd07c8517519;use normal cache policy objects during soft reloads images kio use ifmodifiedsince conditional queries appropriate dont trust caches expiry date softreloading always send conditional queries revalidate instead check completed state part object signaled loaded actually part descendant chain checking ancestors requests (or even processwide documents) wasteful shouldnt check even limited objects requested strictly document children wonder ;440;2;49;37;12
1cb34e3f058ccce4edbc04aebba8245dc18b189a;David Nolden <david.nolden.kde@art-master.de>;17/05/09 19:32;"undo some parts of my last patch: do not lock the smart-mutex before calling the codecompletioncontrollerinterface functions, because that can lead to a deadlock svn path=/trunk/kde/kdelibs/; revision=969254 ";208;interfac;1;8-TYPE;145;efb17fe60c6c16b62c56bdbafcb1e4eb57625ce2;undo parts last patch: lock smartmutex before calling codecompletioncontrollerinterface functions lead deadlock ;112;2;10;5;5
6471d0a28a644d9ca402c1bfd2f46bcc3e9e2963;Michael Jansen <kde@michael-jansen.biz>;17/05/09 16:48;"ok ... kglobalaccel has to ungrab the keys before we update our knowledge of the modifiers. after the update we are unable to do it because kglobalaccel uses our methods to convert qt keycodes into x11 keycodes which could give different results after the update. since kkeyserver is only a namespace i cannot add some signals here. so i just remove this stuff again and do it from kglobalaccel. that keybpoard stuff is a mess. revert ""enable kkeyserver to update itself then the keyboard changes."" this reverts commit 1302ee18a3dd82d9c5019856c2063f40c1ca3d06. svn path=/trunk/kde/kdelibs/; revision=969202 ";607;modifi;1;8-TYPE;145;a95e9da588eea5bf91e0f171895882400ef856b3;ok kglobalaccel ungrab keys before update knowledge modifiers update unable kglobalaccel uses methods convert qt keycodes x11 keycodes give different results update kkeyserver namespace add signals here remove stuff again kglobalaccel keybpoard stuff mess revert enable kkeyserver update itself keyboard changes reverts commit 1302ee18a3dd82d9c5019856c2063f40c1ca3d06 ;368;2;99;2;97
714333af2e8bc34c93920799326a1d58a04036d1;Aaron J. Seigo <aseigo@kde.org>;26/04/09 00:43;"allow loading applets from packages directly svn path=/trunk/kde/kdelibs/; revision=959317 ";91;packag;1;4-TYPE;144;6bf596adb0ea63cb2434a14d878ee5b9df78acc7;allow loading applets packages directly ;40;3;69;54;15
62a11a7edc5983341572d84df0563856a21e2cee;Oswald Buddenhagen <ossi@kde.org>;19/04/09 13:00;"don't force klauncher to be loaded as a module if kde_is_prelinked is set and an executable is found, the kdeinit module is disregarded. however, klauncher was excluded from that for no obvious reason and the log does not say why, either. svn path=/trunk/kde/kdelibs/; revision=956149 ";285;modul;1;11-TYPE;144;3060cf761fb89f275db9096416d10c32fa599b12;dont force klauncher loaded module kdeisprelinked set executable found kdeinit module disregarded klauncher excluded obvious reason log ;136;1;2;1;1
4f617625ff10008ca1eded3d3a3f2fab4fb655ff;David Faure <faure@kde.org>;10/04/09 20:40;"fix the ""main extension"" issue properly, now that shared-mime-info writes out <glob> to the generated xml files: we use the first *.foo entry among those to remember the main pattern, and order the pattern list accordingly. this commit also make kbuildsycoca4 faster and simpler by not touching the mimetypes that haven't changed (in incremental mode). with current shared-mime-info releases, nothing changed, i.e. main extension is still random if multiple globs are set. svn path=/trunk/kde/kdelibs/; revision=952074 ";519;extens;1;8-TYPE;143;b5490fe642d4e05aa816445a0eff07d5c6c5101f;fix main extension issue properly now sharedmimeinfo writes out glob generated xml files: use first foo entry those remember main pattern order pattern list accordingly commit make kbuildsycoca4 faster simpler touching mimetypes havent changed (in incremental mode) current sharedmimeinfo releases nothing changed ie main extension still random multiple globs set ;364;6;154;99;55
ff191979f34e11af3e60392dcc4c582160dedac4;David Faure <faure@kde.org>;09/04/09 17:41;"zlib is required since kde4, so this ifdef (coming from httpfilter.h) doesn't make sense anymore. svn path=/trunk/kde/kdelibs/; revision=951584 ";144;requir;1;11-TYPE;143;195ee53dc68f2fa766a22f7e75aa0008009a03bf;zlib required kde4 ifdef (coming httpfilterh) doesnt make sense anymore ;72;1;46;22;24
7667b5ede3469fbe39d0bdfe263aa161e51b8166;Aaron J. Seigo <aseigo@kde.org>;07/04/09 05:42;"move the entrylist and path setting logic into packagestructure so that packages can have a bit more control over their life svn path=/trunk/kde/kdelibs/; revision=950408 ";171;packag;1;12-TYPE;143;6f36256b32704b47e520d94a2dec6c1fa0690eb3;move entrylist path setting logic packagestructure packages bit more control over life ;87;3;110;63;47
3e19dd7346d8f47289b9d82b4864a5d23f1d4e02;Alexander Neundorf <neundorf@kde.org>;17/03/09 21:27;"add a cmake variable disable_all_optional_subdirectories which can be set to true to disable all subdirectories by default this should make building project in a modular way easier. alex svn path=/trunk/kde/kdelibs/; revision=940644 ";233;modular, modul;2;15-TYPE;143;18991f9825afe925d009aa77b0bcf1153ba0d36f;add cmake variable disablealloptionalsubdirectories set true disable subdirectories default make building project modular way easier alex ;138;1;12;11;1
0bcc2b44773ef32f0bbff3cdf32978d70ea2a786;Chani Armitage <chanika@gmail.com>;04/03/09 17:05;"security constraints can be defined now, whee svn path=/trunk/kde/kdelibs/; revision=935220 ";92;constraint;1;13-TYPE;142;fd7e426cce147f4720e215ed7e05a39db863e372;security constraints defined now whee ;38;2;34;34;0
3c56cb4a9981fb82433f1ad7fe03d52f46d28506;David Nolden <david.nolden.kde@art-master.de>;27/02/09 01:23;"backport r932614: copy the completion-models before iterating over them, and always make sure that the processed model has not been removed as a side-effect. this should fix a possible crash that could happen when one o t he called function caused the completion to abort completey, thus invalidating the iterator. bug: 185661 svn path=/branches/kde/4.2/kdelibs/; revision=932615 ";380;iter;1;8-TYPE;142;41f8e03197230b71f584551a2113aa5b0140568f;backport r932614: copy completionmodels before iterating over always make sure processed model removed sideeffect fix possible crash happen one o t called function caused completion abort completey thus invalidating iterator ;225;1;23;16;7
41f8e03197230b71f584551a2113aa5b0140568f;David Nolden <david.nolden.kde@art-master.de>;27/02/09 01:20;"copy the completion-models before iterating over them, and always make sure that the processed model has not been removed as a side-effect. this should fix a possible crash that could happen when one o t he called function caused the completion to abort completey, thus invalidating the iterator. bug: 185661 svn path=/trunk/kde/kdelibs/; revision=932614 ";355;iter;1;8-TYPE;142;0d74cf16f46a7494b91f590db8ea667ce0e9e52f;copy completionmodels before iterating over always make sure processed model removed sideeffect fix possible crash happen one o t called function caused completion abort completey thus invalidating iterator ;207;1;23;16;7
89ec3e291322a313b8ab88abdcc65bb347f965ab;Kevin Ottens <ervin@kde.org>;22/02/09 17:59;"org.freedesktop.hal.volume is not a constant interface (oh joy!), so test for the mount method to be really really sure we can expose storageaccess on the device. (e.g. avoid having audio cds as false positive) svn path=/trunk/kde/kdelibs/; revision=930119 ";257;interfac;1;6-TYPE;142;750fbf129cd7813916bbac24fe2539b4aa5055a1;orgfreedesktophalvolume constant interface (oh joy) test mount method really really sure expose storageaccess device (eg avoid having audio cds false positive) ;160;1;2;1;1
673a55d40d6b3933d0464c12cb6fa17bb2b20d18;Michael Jansen <kde@michael-jansen.biz>;19/02/09 01:20;"kglobalaccel::cleancomponent() removes all currently not active global shortcuts a component. if nothing is left the component is removed too. svn path=/trunk/kde/kdelibs/; revision=928155 ";189;compon;1;11-TYPE;142;98dc49fb8dd065b42495f8fd3d98fbf83f766a93;kglobalaccel::cleancomponent() removes currently active global shortcuts component nothing left component removed ;114;3;48;47;1
06fc58a5697012a978f5b3bb85f2c3b71f227762;Michael Jansen <kde@michael-jansen.biz>;16/02/09 00:21;"adapt kdelibs to making kdedglobalaccel a standalone demon. rename everything kdedglobal* to kglobal* for convenience. this commit requires a recompile of at least kdebase-runtime too. you will loose global shortcut on your next session login or kded/application restart. if you want kcmshell4 keys to work again please recompile kdebase-workspace too. svn path=/trunk/kde/kdelibs/; revision=926714 ";399;adapt, requir;2;6-TYPE;142;89da005d3a79814d80e76ddf88a7edea97c10289;adapt kdelibs making kdedglobalaccel standalone demon rename everything kdedglobal kglobal convenience commit requires recompile kdebaseruntime loose global shortcut next session login kded/application restart want kcmshell4 keys work again please recompile kdebaseworkspace ;275;20;630;323;307
61d6579a7bf054ba0d13974697e950fd0dfe2e96;Andreas Hartmetz <ahartmetz@gmail.com>;18/01/09 17:20;"make it clear to any readers of this code that (as required) blocking dbus calls are used. actual behavior should remain unchanged. svn path=/trunk/kde/kdelibs/; revision=913022 ";178;requir;1;8-TYPE;141;0b140b81b985752c54982af5d4fe8dca6f66bf53;make clear readers code (as required) blocking dbus calls used actual behavior remain unchanged ;96;1;9;5;4
61162ed77e08a5e7758ae7b47d01f441ce12bf38;Michael Pyne <mpyne@kde.org>;04/01/09 06:21;"revert commit 902991 (and a related bc-maintaining commit which is now unnecessary).  this commit was intended to improve support for accented characters from what i gather but it moved the keypress event handler to act on key release instead which is causing bug 179205 (klineedits have actions using ctrl key duplicated twice).  this is because pasting on key release doesn't stop qt from pasting on key press (and we can't just disable various qt actions on key press as that's really an implementation detail for qt imo). i'm sure there is a way to implement the accented chars thing that makes everyone happy but i'd rather fix the more pressing bug at this point. ccmail:ereslibre@kde.org bug:179205 svn path=/trunk/kde/kdelibs/; revision=905299 ";752;maintain;1;1-TYPE;140;a0f094b4db1669f5de40b50b21fba70b6d0a8702;revert commit 902991 (and related bcmaintaining commit now unnecessary) commit intended improve support accented characters gather moved keypress event handler act key release instead causing bug 179205 (klineedits actions using ctrl key duplicated twice) pasting key release doesnt stop qt pasting key press (and cant disable various qt actions key press thats really implementation detail qt imo) im sure way implement accented chars thing makes everyone happy id fix more pressing bug point ccmail:ereslibrekdeorg ;517;2;45;12;33
abc47857b7d7952040d8829d11cb7057d8730027;Aaron J. Seigo <aseigo@kde.org>;18/12/08 22:12;"allow for immediate syncs to be required svn path=/trunk/kde/kdelibs/; revision=898745 ";87;requir;1;8-TYPE;140;99ac1a767dcb0dbfa7d19f19041972236b7a6e5d;allow immediate syncs required ;31;2;14;14;0
db00429ac8d8c79728907025a4abbe123f69259a;Alexander Neundorf <neundorf@kde.org>;09/12/08 00:33;"-add a central findkde4workspace.cmake in kdelibs, which is used by kdetoys, kdeartwork and kdeplasma-addons (e.g. kscreensaver, plasmaclock and some more) -install a kde4workspaceconfig.cmake file from kdebase/workspace, which is loaded by findkde4workspace.cmake from kdelibs/cmake/modules, and which provides all information and targets necessary to use this stuff unfortunately this may required updating both kdelibs and kdebase for kdetoys, kdeartwork and kdeplasma-addons alex svn path=/trunk/kde/kdelibs/; revision=894637 ";530;requir, provid, modul;3;11-TYPE;139;919060742e93fe92b32d2fe94227e3643c148659;add central findkde4workspacecmake kdelibs used kdetoys kdeartwork kdeplasmaaddons (eg kscreensaver plasmaclock more) install kde4workspaceconfigcmake file kdebase/workspace loaded findkde4workspacecmake kdelibs/cmake/modules provides information targets necessary use stuff unfortunately required updating both kdelibs kdebase kdetoys kdeartwork kdeplasmaaddons alex ;368;2;67;66;1
0cdde44b6b417dd2324652a371a512e9141ef215;Thiago Macieira <thiago@kde.org>;05/12/08 10:22;"the non-blocking mode of kio does not work. this requires an event-loop or that the waitfor* functions be called. switch to the blocking mode by default and do not accept changing to non-blocking mode. svn path=/trunk/kde/kdelibs/; revision=892787 ";248;requir;1;8-TYPE;139;dfaf55b7a636722707c16575c16a116690300dc8;nonblocking mode kio work requires eventloop waitfor functions called switch blocking mode default accept changing nonblocking mode ;132;1;8;6;2
97a7e1386803e74727db43f1c99cb4aaf23ab2e8;Laurent Montel <montel@kde.org>;11/11/08 10:38;"port to pkg_check_modules svn path=/trunk/kde/kdelibs/; revision=882701 ";72;modul;1;3-TYPE;138;24bfa2863cb74fbfd87cac4b87eb44fbb37f8e22;port pkgcheckmodules ;21;1;12;6;6
904bc4e1bbcecfb03d403e78290c80162798bc04;Laurent Montel <montel@kde.org>;10/11/08 07:49;"port to use pkg_check_modules svn path=/trunk/kde/kdelibs/; revision=882248 ";76;modul;1;3-TYPE;138;9c63cee51160a442da21dcc7f38533d38ee5a6ea;port use pkgcheckmodules ;25;1;53;31;22
796659454ac64106c830fad711802e0a5ef8f60b;David Faure <faure@kde.org>;06/11/08 20:25;"small optimization: scheduler: job started kio::listjob(0x20cd840) joblist size: 5005 found at index 0 ... better not iterate over the 5005 entries then, if the job we're starting is almost always at position 0. svn path=/trunk/kde/kdelibs/; revision=880904 ";258;iter;1;13-TYPE;138;aeef2c0011c544a9b940a828f7f49c73b889c6e0;small optimization: scheduler: job started kio::listjob(0x20cd840) joblist size: 5005 found index 0 better iterate over 5005 entries job starting always position 0 ;164;1;6;3;3
e11d00cc940e3126543060286a15d9200c2385c7;Rafael Fernández López <ereslibre@kde.org>;19/10/08 00:43;"fix crash on koffice (well, and any component using directly kfilewidget). the main problem was that synchronousrun does make the event loop being executed (specially those events which are graphical, for making the gui not look 'stalled'). this produces the showevent() method being called while the constructor of kfilewidget hasn't been finished yet (specially d->ops not being assigned yet, thus, d->ops was a perfect 0). showevent() method was being called _before_ d->ops was being assigned, and of course, it was crashing. the fix is to create the dir operator with a null url, and after we have initializated all the needed components, we can run the synchronousrun method. bug: 172678 svn path=/trunk/kde/kdelibs/; revision=873189 ";740;compon;1;8-TYPE;138;0431771e2daf785ef4a9c33e6ed1fcaabd009dd6;fix crash koffice (well component using directly kfilewidget) main problem synchronousrun make event loop being executed (specially those events graphical making gui look stalled) produces showevent() method being called constructor kfilewidget hasnt finished (specially dops being assigned thus dops perfect 0) showevent() method being called before dops being assigned course crashing fix create dir operator null url initializated needed components run synchronousrun method ;478;1;28;15;13
88490d08540384da73b171f4a04321a54d1addf7;Aaron J. Seigo <aseigo@kde.org>;13/10/08 22:40;"allow packagestructures to provide their own online browsers svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=871119 ";129;packag, provid;2;6-TYPE;138;ed9102a640bb845bfdf0d12ca58032fb2cea5a2b;allow packagestructures provide online browsers ;48;7;151;128;23
bd84e4019831354f2077c4b56fb5819a0e4077ec;Fredrik Höglund <fredrik@kde.org>;01/10/08 22:54;"move kabstractviewadapter and the defaultviewadapter implementation to kio so kmimetyperesolver can use it. svn path=/trunk/kde/kdelibs/; revision=866805 ";154;adapt;1;1-TYPE;137;ffaf5d63e6716003a3076a17521c9163d5599a54;move kabstractviewadapter defaultviewadapter implementation kio kmimetyperesolver use ;86;5;182;122;60
8365dee91751519996fd0728e1e20e47a2a9270b;David Faure <faure@kde.org>;23/09/08 20:38;"kglobalsettings::documentpath doesn't need a kcomponentdata anymore -> simplify svn path=/trunk/kde/kdelibs/; revision=864062 ";126;compon;1;11-TYPE;137;63f2e994cf8ab89ec3d147f3f4d7a030e084bc92;kglobalsettings::documentpath doesnt need kcomponentdata anymore simplify ;74;1;14;2;12
66e4d6dfaef6fac8a39af9161b0d5cf2cfb0fe7d;David Faure <faure@kde.org>;18/09/08 09:49;"finally fixing bug 43356: ""deleting files in directories with more than 3000 files gets painfully slow"" (from 2002, with 260 votes) with model/view we can finally update the view in a better way: by chunks instead of item-after-item. this required adding a itemsdeleted signal to kdirlister, and some figure-out-consecutive-removals logic in kdirmodel using qbitarray (for begininsertrows). results: deleting 5000 files with konqueror-4.1: 8 minutes (30 seconds stat'ing, 5 seconds deleting, and then 7'25"" until the view refreshes). deleting 5000 files with konqueror-trunk: 15 seconds (2 seconds stat+deleting, 13 seconds until the view refreshes). svn path=/trunk/kde/kdelibs/; revision=862165 ";697;requir;1;13-TYPE;137;7c8bcb56c51c5da2b49806b0cd0aabff6d0261e2;finally fixing bug 43356: deleting files directories more 3000 files gets painfully slow (from 2002 260 votes) model/view finally update view better way: chunks instead itemafteritem required adding itemsdeleted signal kdirlister figureoutconsecutiveremovals logic kdirmodel using qbitarray (for begininsertrows) results: deleting 5000 files konqueror41: 8 minutes (30 seconds stating 5 seconds deleting 725 until view refreshes) deleting 5000 files konquerortrunk: 15 seconds (2 seconds statdeleting 13 seconds until view refreshes) ;534;8;274;205;69
3a00f7d5174855613f0db1e0f374a4cd842cfd40;David Faure <faure@kde.org>;17/09/08 15:08;"performance: replace linear search with hash-table lookup, so that the o(n*depth) method is now only o(depth) (but in many cases the caller then calls a o(n) method, so this is o(n) in practice, where n is the number of files in the directory, so no complexity gain in the n=5000 depth==1 case like bug 150885 -- but in practice the remaining o(n) lookup runs much much less code for each iteration than the old code did) svn path=/trunk/kde/kdelibs/; revision=861921 ";468;iter;1;15-TYPE;137;43fcd38b03fe044a1e1a8bd0641ce99cceb37da1;performance: replace linear search hashtable lookup o(ndepth) method now o(depth) (but many cases caller calls o(n) method o(n) practice n number files directory complexity gain n5000 depth1 case bug 150885 practice remaining o(n) lookup runs much much less code each iteration old code did) ;292;1;123;67;56
bd19bee7487b071dc3141d2797d29726be13a2d0;Michael Jansen <kde@michael-jansen.biz>;16/09/08 00:19;"performance. localizing the name 40.000 times is expensive :-) . that how often it is requested just by opening kmails shortcuts editor dialog and closing it immediately. svn path=/trunk/kde/kdelibs/; revision=861398 ";217;localiz;1;13-TYPE;137;ff1b5059edeae560a6851b69eca6b5dd65c38844;performance localizing name 40000 times expensive :) requested opening kmails shortcuts editor dialog closing immediately ;122;2;7;5;2
943ea333bc7c9e9cc3b49e5b8365af6d45160d1f;Germain Garand <germain@ebooksfrance.org>;05/09/08 00:41;"implementation of elementtraversal interface http://www.w3.org/tr/elementtraversal/ derived from patch by vincent ricard <magic magicninja dot org> svn path=/trunk/kde/kdelibs/; revision=857216 ";194;interfac;1;3-TYPE;136;8f5855e94a34c4ddde6d4d037799929a47de7943;implementation elementtraversal interface derived patch vincent ricard magic magicninja dot org ;96;6;155;150;5
b02802a202196ee672f8012b3faf8db86cf12b9f;Will Stephenson <wstephenson@kde.org>;04/09/08 09:38;"use storageid() for the kauthorized (kiosk) check whether a module should be loaded, because this is guaranteed to be set, unlike menuid.  if the tested id is empty the check always returns true. svn path=/trunk/kde/kdelibs/; revision=856957 ";242;modul;1;11-TYPE;136;ea3f3d48b187d57430b22702655fd46ee567449f;use storageid() kauthorized (kiosk) check whether module loaded guaranteed set unlike menuid tested id empty check always returns true ;135;1;2;1;1
740779875f1925d57713ad8f2547d7358a206c55;Michael David Howell <mhowell123@gmail.com>;26/08/08 23:39;"fix kdewebkit so it can be build independently of webkitpart. (note: still need to fix the cmake module) svn path=/trunk/playground/libs/webkitkde/kdewebkit/; revision=852996 ";175;modul;1;11-TYPE;136;f6d9a7ce8fd9b57f5a78c3db1ddfdcff62815cf8;fix kdewebkit build independently webkitpart (note: still need fix cmake module) ;81;5;21;21;0
b820ac98e120158aa1a3200d6d8b9d5715347840;Andreas Hartmetz <ahartmetz@gmail.com>;18/08/08 20:49;"don't fail to connect  when using http connect via qabstractsocket and qnetworkproxy::httpproxy and a password is required. in other words, fix authorization when using an ssl proxy. -don't make saveauthorization() check for the previous response code to determine the authorization type to save (proxy/www) but pass this information directly for more flexibility. -do the usual checkcachedauthentication()/openpassworddialog() thing when the socket says it needs proxy auth data. -save proxy auth data that was passed to the socket if the connection succeeded after obtaining the credentials from the user. svn path=/trunk/kde/kdelibs/; revision=848992 ";654;requir;1;7-TYPE;136;0350b7980358e5d0b64de77b981600066ae79b57;dont fail connect using http connect via qabstractsocket qnetworkproxy::httpproxy password required words fix authorization using ssl proxy dont make saveauthorization() check previous response code determine authorization type save (proxy/www) pass information directly more flexibility usual checkcachedauthentication()/openpassworddialog() thing socket needs proxy auth data save proxy auth data passed socket connection succeeded obtaining credentials user ;461;2;69;61;8
d7da07d41f950e88b135eb5e0864fc7655e22ce9;Helio Castro <helio@kde.org>;06/08/08 18:36;"complete new implementation of xdg-user-dirs based on recent discussion at #kde-devel. qt 4.4 implements partially the xdg spec except for xdg_download_path ( templates and publicshared is not required ), which is done using part of the previous code. the reason to move for qt code comes because portability to other platforms. kde have autostart path, so the same old code was kept and behavior remains the same. svn path=/trunk/kde/kdelibs/; revision=843219 ";461;requir;1;6-TYPE;135;45b61eeff40a3c4ce34eeb58bd96a9d56fba88e0;complete new implementation xdguserdirs based recent discussion kdedevel qt 44 implements partially xdg spec except xdgdownloadpath ( templates publicshared required ) done using part previous code reason move qt code comes portability platforms kde autostart path same old code kept behavior remains same ;306;1;179;32;147
d9a0cacfbb96c2eb0ec37b1c3dbbb413b2791652;Pino Toscano <pino@kde.org>;30/07/08 23:16;"kio uses qtgui stuff, so add its symbols as ""public interface"" ccmail: mueller@kde.org svn path=/trunk/kde/kdelibs/; revision=839849 ";133;interfac;1;9-TYPE;135;578c071c83011415c0a9d1f19241b6b9acb69907;kio uses qtgui stuff add symbols public interface ccmail: muellerkdeorg ;72;1;2;1;1
54b72c8ae432686b89165b9e4e9a565da26e7e59;Kevin Ottens <ervin@kde.org>;29/07/08 13:48;"allow to mark plugins as ""immutable"" and force ksettings::dialog to respect that. this way it's now possible to have components the user can't disable (for instance in kontact it doesn't make sense to disable the mail component). svn path=/branches/kde/4.1/kdelibs/; revision=839199 ";283;compon;1;11-TYPE;135;8746c6a68539dd043337403f4b7a58311efd4031;allow mark plugins immutable force ksettings::dialog respect way now possible components user cant disable (for instance kontact doesnt make sense disable mail component) ;171;3;14;12;2
300e004526da56324fbb4bac20f16fc9e0aaf88e;Alexander Neundorf <neundorf@kde.org>;22/07/08 22:50;"-fix linking on windows, here by default the link_interface_libraries properties was set, while it was intended that by default it shouldn't be set alex ccmail: kde-windows@kde.org svn path=/trunk/kde/kdelibs/; revision=836766 ";227;interfac;1;4-TYPE;135;e485009db583fdd58bfa4451c526c61e4969ad50;fix linking windows here default linkinterfacelibraries properties set intended default shouldnt set alex ccmail: kdewindowskdeorg ;131;1;26;14;12
97e7445695ac1f156ea5b6640191bd242d643b9d;Michael Jansen <kde@michael-jansen.biz>;16/07/08 21:04;"some cleanup and some new methods exposed via dbus. i need them for the hotkeys kcm. bool ismoduleautoloaded(const qstring &module); bool ismoduleloadedondemand(const qstring &module); void setmoduleautoloading(const qstring &module, bool autoload); ccmail: david faure <faure@kde.org> svn path=/trunk/kde/kdelibs/; revision=833472 ";332;modul;1;9-TYPE;135;4a524bf4d6032b878b3e3ac77eed5f8e0bc90a99;cleanup new methods exposed via dbus need hotkeys kcm bool ismoduleautoloaded(const qstring module) bool ismoduleloadedondemand(const qstring module) void setmoduleautoloading(const qstring module bool autoload) ccmail: david faure faurekdeorg ;244;4;119;109;10
8e202ac693ba97805594a88abcdb4f0b898b640e;David Faure <faure@kde.org>;07/07/08 22:43;"i can't create a kcomponentdata here, i have to use s_instance which isn't registered as the main componentdata. this requires duplicating a bit of code from kglobalsettings, but at least it fixes the main componentdata being wrong in e.g. kioslaves - which broke translation in kio_help etc. according to chusslove. svn path=/trunk/kde/kdelibs/; revision=829259 ";363;requir, compon;2;2-TYPE;134;ea4a465751f691e821ef1e026795161159401cad;cant create kcomponentdata here use sinstance isnt registered main componentdata requires duplicating bit code kglobalsettings fixes main componentdata being wrong eg kioslaves broke translation kiohelp etc according chusslove ;227;1;20;15;5
b48b0a8a8310749839af5b84f0b809b6b1c9f84f;Hamish Rodda <rodda@kde.org>;06/07/08 11:46;"ok, it was wrong to hold the smart lock here, because client apps may need to acquire one of their own locks before the smart lock, and that may violate their lock acquisition ordering, leading to deadlocks. instead, it's ok to make it a requirement that those apps connect to this signal, use kate if required during the execution of that signal (including locking the smart mutex as required), and then ensure that they don't use it any more once they return. svn path=/trunk/kde/kdelibs/; revision=828688 ";508;requir;1;8-TYPE;134;e05604ad28301f3295e97d525304ebefe01226e5;ok wrong hold smart lock here client apps need acquire one locks before smart lock violate lock acquisition ordering leading deadlocks instead ok make requirement those apps connect signal use kate required during execution signal (including locking smart mutex required) ensure dont use more once return ;305;1;9;2;7
1c0b90f01209b9560e79ee84558ce9660f7e861a;David Faure <faure@kde.org>;26/06/08 19:11;"move kdatetime usage after kcomponentdata creation, since it requires a componentdata. svn path=/trunk/kde/kdelibs/; revision=824869 ";133;requir, compon;2;11-TYPE;134;76187de323dced97c47215d29e15b1b2bbc215aa;move kdatetime usage kcomponentdata creation requires componentdata ;68;1;10;5;5
d46e71899b4c8bfe2f8a14a015a63231760bd5c6;David Faure <faure@kde.org>;26/06/08 00:25;"add dbus interface for notifycompletechange, useful when changing bookmarks.xml by hand svn path=/trunk/kde/kdelibs/; revision=824522 ";134;interfac;1;11-TYPE;134;acaa850b110fe16a060e6afceb12529184772a8f;add dbus interface notifycompletechange useful changing bookmarksxml hand ;74;2;15;13;2
51aabe99d68f78d65dd3622fd16ce78692756821;Michael Jansen <kde@michael-jansen.biz>;05/06/08 23:52;"fix overridemaincomponentdata() ensure an actions has always an valid associated component. svn path=/trunk/kde/kdelibs/; revision=817409 ";138;compon;1;11-TYPE;133;cc00bbb22010af94a2eb95d12201fbeceec17681;fix overridemaincomponentdata() ensure actions always valid associated component ;81;5;77;56;21
35771bfee03c9fcebcc23fb8da0e0d1b6a77b7d7;Alexander Neundorf <neundorf@kde.org>;03/06/08 20:01;"as discussed with dirk, make the link interface empty by default, i.e. by default apps linking to libfoo won't be linked to the libs libfoo.so links against too anymore. this can be enabled by setting with the option kde4_enable_experimental_lib_export. if enabled, this currently breaks already kdelibs and probably other modules too. dirk will test. alex ccmail: mueller@kde.org ccmail: modestas@vainius.eu svn path=/trunk/kde/kdelibs/; revision=816409 ";455;interfac, modul;2;11-TYPE;133;8c8e46960df09d5842f5bf44340d834b1cac1502;discussed dirk make link interface empty default ie default apps linking libfoo wont linked libs libfooso links against anymore enabled setting option kde4enableexperimentallibexport enabled currently breaks already kdelibs probably modules dirk test alex ccmail: muellerkdeorg ccmail: modestasvainiuseu ;304;2;80;46;34
4be99fc9d3504d0f10ea8f7c285905eed0e501ee;Erlend Hamberg <ehamberg@gmail.com>;25/05/08 11:41;"as robin pointed out, as as paul had pointed in his commit, displaybacktrace() should not use kdebug, as that would mean that users have no way to debugging a new indent script if they use distro packages. ccmail: kwrite-devel@kde.org svn path=/trunk/kde/kdelibs/; revision=812310 ";281;packag;1;11-TYPE;133;3f983720bf549834322ee0205b98d69987247fba;robin pointed out paul pointed commit displaybacktrace() use kdebug mean users way debugging new indent script use distro packages ccmail: kwritedevelkdeorg ;157;1;12;7;5
f51301f34915aeae91b4190ece90435bf2c24e9c;Aaron J. Seigo <aseigo@kde.org>;09/05/08 03:49;"huge patch, but it's needed to avoid crashes and i can't wait on other people's pending work forever. so... querymatch by value! shared dptr == no copy of data either! so (nearly) all the speed love of pointers with none of the crash hate. woo! runnercontext also by value! die pointers die! also get rid of tons of locking that just doesn't make sense anymore; get rid of data priority enum as well since it's completely meaningless. speed, glory, stability! ftw! svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=805661 ";533;stabil;1;8-TYPE;132;ce558ca0bf7cacf284e7697060821e1a43c50c23;huge patch needed avoid crashes cant wait peoples pending work forever querymatch value shared dptr copy data (nearly) speed love pointers none crash hate woo runnercontext value die pointers die rid tons locking doesnt make sense anymore rid data priority enum well completely meaningless speed glory stability ftw ;316;10;242;109;133
096cc30b7b1a1de803ccd0c32cf8150f748f6a82;Andreas Hartmetz <ahartmetz@gmail.com>;05/05/08 17:52;"per component (as in kpart) global shortcuts accessible via kactioncollection::setcomponentdata(). unittest passed as soon as it compiled -> i is t3h 1337. practical testing has been less than a day so something might have broken(!) svn path=/trunk/kde/kdelibs/; revision=804328 ";279;compon;1;3-TYPE;132;b4ac1bc3eafe0c464c41ffa0a92a6b8255351051;per component (as kpart) global shortcuts accessible via kactioncollection::setcomponentdata() unittest passed soon compiled t3h 1337 practical testing less day something broken() ;180;7;120;84;36
e68b01a803728fe6139b4aaf9c46f3c9674aba43;David Faure <faure@kde.org>;04/05/08 14:18;"use the kedittoolbar(kxmlguifactory* factory) constructor from kxmlguiwindow too, so that any kxmlguiclients that have been added to the mainwindow, will show up in the toolbar editor. this happened with stephen kelly's kxmlguieditor guiclient, for instance. fix the way kxmlguiwindow reconstructs the gui after toolbar config has changed, so that it doesn't lose child guiclients. iow, this is simply a bit more of kparts technology moving up to kdeui, for lightweight components to work too. svn path=/trunk/kde/kdelibs/; revision=803933 ";540;compon;1;10-TYPE;132;826458b229d42e8cf311e37d76888369fb661a82;use kedittoolbar(kxmlguifactory factory) constructor kxmlguiwindow kxmlguiclients added mainwindow show up toolbar editor happened stephen kellys kxmlguieditor guiclient instance fix way kxmlguiwindow reconstructs gui toolbar config changed doesnt lose child guiclients iow simply bit more kparts technology moving up kdeui lightweight components work ;352;3;122;49;73
0a2ecd57e3acdb5b5a5a89c3d603350b24f273de;Nick Shaforostoff <shafff@ukr.net>;29/04/08 09:30;"add one more proxymodel==0 check, update api docs to reflect architectural changes, remove unneded kstyle.h include ccmail=ereslibre@kde.org svn path=/trunk/kde/kdelibs/; revision=802412 ";187;architectur;1;15-TYPE;132;a3a6aa6eb56ed16eedbcce11c5cc534a271868ef;add one more proxymodel0 check update api docs reflect architectural changes remove unneded kstyleh include ;108;2;11;4;7
e353db3ea17ee7fe55bb8809280c3ae3bdd9185d;Allen Winter <winter@kde.org>;28/04/08 17:49;"major rewrite: - nepomuk depends on soprano, so we check for soprano too, if not already checked for.  iow: you no longer need to check for soprano separately first in order to successfully use nepomuk. - use findpackagehandlestandardargs() svn path=/trunk/kde/kdelibs/; revision=802159 ";287;packag;1;11-TYPE;132;b35a86175ec4b27cb2f9abff8da615f523409eb0;major rewrite: nepomuk depends soprano check soprano already checked iow: longer need check soprano separately first order successfully use nepomuk use findpackagehandlestandardargs() ;184;1;79;43;36
20792c851f5e4cd27d19d7f20a917cc806b88b0d;David Faure <faure@kde.org>;17/04/08 21:23;"provide compatibility with parts implemented with the deprecated kpart::factory, once konqueror is ported to kpluginloader/kpluginfactory (very soon) svn path=/trunk/kde/kdelibs/; revision=798274 ";196;provid;1;3-TYPE;132;005506ae48b25fc8fe9dcdf105e9f39a4e78ed88;provide compatibility parts implemented deprecated kpart::factory once konqueror ported kpluginloader/kpluginfactory (very soon) ;129;1;23;15;8
7ef176617af181e9bd612a8b3fe5e3549d06074f;Andreas Hartmetz <ahartmetz@gmail.com>;14/04/08 02:29;"make kextendableitemdelegate use qstyleditemdelegate as its base class, plus some smallish api and doc improvements. this is based on a patch given to me by uwolfer and my own little fixes. svn path=/trunk/kde/kdelibs/; revision=796687 ";236;extend;1;11-TYPE;132;8eb8d858f40200c9f05123ebdca2814d70ccc564;make kextendableitemdelegate use qstyleditemdelegate base class plus smallish api doc improvements based patch given uwolfer little fixes ;138;3;94;52;42
5d943d218fb769dd9e3643a65b1f56982e1df39b;Aaron J. Seigo <aseigo@kde.org>;12/04/08 16:00;"implement package support svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=796112 ";94;packag;1;5-TYPE;131;acc6e83a74e05eb14b66ad615896ad6293946269;implement package support ;26;2;59;42;17
b7dbaac6b140ca5b3ddadd8c76eceebb00b9bbb3;Germain Garand <germain@ebooksfrance.org>;21/03/08 07:27;"css 3 - media queries cf. http://www.w3.org/tr/css3-mediaqueries/ this is a full implementation supporting all media features, for both visual and paged media types we support. it is based on the partial implementation found in webcore. with some refactoring work, fixes, and implementation of the missing bits. this module allows web content writers to query the capabilities of the client's output device (be it a screen, a printer, etc.) and automatically select css styles that are best suited to it. svn path=/trunk/kde/kdelibs/; revision=788248 ";551;modul, iter;2;6-TYPE;131;ae7ace2ea3b0267ccbe4ba140181e9d3680817ba;css 3 media queries cf full implementation supporting media features both visual paged media types support based partial implementation found webcore refactoring work fixes implementation missing bits module allows web content writers query capabilities clients output device (be screen printer etc) automatically select css styles best suited ;344;26;4463;3123;1340
b3b3afe963713ccf6a69b319e0c8cc39fa06ee28;Sebastian Trueg <sebastian@trueg.de>;17/03/08 10:01;"* added methods to recursevely get all parent and child classes * added method to reset an entity. this is necessary since for performance reasons the ontologies are not updated on change and i started developing user modification of the user ontology. * handle rdfs:resource as a special case: all classes that do not define an explicit super class now have rdfs:resource as their super class. * class::allproperties is now called class::domainof * added method class::rangeof to get all properties that this class is in the range of. * made comparision operators const. * fixed handling of rdfs:literal svn path=/trunk/kde/kdelibs/; revision=786517 ";651;modifi, iter;2;13-TYPE;131;4aea8830d4dfd1f56891a8bab63d21b3ccab3aba;added methods recursevely parent child classes added method reset entity necessary performance reasons ontologies updated change started developing user modification user ontology handle rdfs:resource special case: classes define explicit super class now rdfs:resource super class class::allproperties now called class::domainof added method class::rangeof properties class range made comparision operators const fixed handling rdfs:literal ;441;14;513;482;31
eff769c61b278fb077bb70e68dd0e0d78b8cc4dd;Michael Jansen <kde@michael-jansen.biz>;06/03/08 15:29;"set x-kde-dbus-module for all kdedmodules. also changed kdedmodule.desktop even if i have absolutely no idea for what it's good. did work without modifying it. svn path=/trunk/kde/kdelibs/; revision=782939 ";206;modul;1;11-TYPE;130;81321a3d4827fe9018e2c60ade9be5a1cd7eead6;set xkdedbusmodule kdedmodules changed kdedmoduledesktop even absolutely idea good work without modifying ;106;6;7;7;0
c32f8ac75189e91253ff093199e912bf5e997283;Sebastian Sauer <mail@dipe.org>;29/02/08 21:50;"let the applets know about the updated immutableconstraint too. ok?! cc_mail:aseigo@kde.org svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=780735 ";160;constraint;1;8-TYPE;130;eea5e18ba783610c15665bcc26804c1bb71659cf;applets know updated immutableconstraint ok ccmail:aseigokdeorg ;64;1;5;4;1
12cc50de3b7b284ee2751413cd2f5587ff59a435;Aaron J. Seigo <aseigo@kde.org>;28/02/08 03:53;"package structure appropriateness for dynamic packages svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=780124 ";123;packag;1;12-TYPE;130;177872094587dc7662eaa19d7c97e51b7d9a5882;package structure appropriateness dynamic packages ;51;6;106;87;19
08edb4b74655a65d42d226ad558e72e5fb74a90f;Aaron J. Seigo <aseigo@kde.org>;26/02/08 01:46;"* make read non-static so you have to create a packagestructure first; better symetry with write and prevents some unecessary object copies between methods (e.g. load -> read) * provide a load method svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=779402 ";268;packag, provid;2;11-TYPE;130;3e5ef9d02774f0c43be79834e7aec72f757a9a32;make read nonstatic create packagestructure first better symetry write prevents unecessary object copies between methods (eg load read) provide load method ;156;2;109;71;38
5dc2da819ffad77992844210bcd66529693f42b3;Thiago Macieira <thiago@kde.org>;05/02/08 16:38;"add more library to the gstreamer library search. note: the gstreamer 0.10 package comes with 5 libraries and we only check for one. in addition, we check for a library that comes from the gstreamer-plugins-base 0.10 package. i suggest this be cleaned up. the extra library can go into findgstreamerplugins.cmake file. svn path=/trunk/kde/kdelibs/; revision=771265 ";365;packag;1;6-TYPE;129;2f9ed005762c0e3b64cd615331cc6e72b4b72bc0;add more library gstreamer library search note: gstreamer 010 package comes 5 libraries check one addition check library comes gstreamerpluginsbase 010 package suggest cleaned up extra library go findgstreamerpluginscmake file ;227;1;19;12;7
cffc91387ea8ce0cb0a36a21aef7b21a3bf523a2;Aaron J. Seigo <aseigo@kde.org>;04/02/08 20:28;"provide a biglock() for runners to use whenever accessing common but non-reentrant api (e.g. most everything in kdelibs ;) svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=770952 ";191;provid;1;8-TYPE;129;a305fbc4a343dd774fda2a8aabfcd49c3dc6cfcf;provide biglock() runners use whenever accessing common nonreentrant api (eg everything kdelibs ) ;98;2;14;11;3
85c5a23720c4caca63a6e46aea482bb86b6959c9;Matthias Kretz <kretz@kde.org>;04/02/08 18:16;"add new helpers to handle the backend interfaces. the idea is that when a backend interface needs a new virtual function the old interface is renamed but the q_declare_interface is kept (with the changed interface name). that way implementations from backends compiled against older libphonon can still be casted to that renamed interface. a new interface is added with the name the old interface had before and a new q_declare_interface statement is added. that way backends automatically get source incompatible (kind of) which helps to find the places where new implementations are needed. to make it easier on the frontend side to access the backend i added template magic structs/functions that will return either 0 or the correctly casted pointer. now i'm praying that all compilers we need to support can handle this code. svn path=/trunk/kde/kdelibs/; revision=770909 ";876;interfac;1;6-TYPE;129;6bb88314afb96ec82d5020fbbb9b80826f6b018d;add new helpers handle backend interfaces idea backend interface needs new virtual function old interface renamed qdeclareinterface kept (with changed interface name) way implementations backends compiled against older libphonon still casted renamed interface new interface added name old interface before new qdeclareinterface statement added way backends automatically source incompatible (kind of) helps find places new implementations needed make easier frontend side access backend added template magic structs/functions return 0 correctly casted pointer now im praying compilers need support handle code ;610;2;84;79;5
4159beba3c12e93928b56de482888b1ef54955e7;Aaron J. Seigo <aseigo@kde.org>;25/01/08 00:11;"add x-plasma-componenttypes so scriptengine libs can define which components they support svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=765981 ";158;compon;1;11-TYPE;129;b52b842d09a02f39b033868fe4d37f512971d74b;add xplasmacomponenttypes scriptengine libs define components support ;70;1;3;3;0
7fd28da55e8050150e178f12d2fabe93e42fb0d6;Allen Winter <winter@kde.org>;20/01/08 00:37;"put the minimum soprano version in the feature logging message. this is useless now because findsoprano exits if the min version requirement isn't met... but we hope that becomes a status message rather than a hard exit. svn path=/trunk/kde/kdelibs/; revision=763646 ";267;requir;1;11-TYPE;129;b5e3c490250224200be7370e248725bd2774f77f;put minimum soprano version feature logging message useless now findsoprano exits min version requirement isnt met hope becomes status message hard exit ;153;1;2;1;1
bb896a1e4390f9972800f637b3669632c5499db8;David Faure <faure@kde.org>;16/01/08 22:47;"i was right when i wrote the first line of this comment: there is no reason for this assert to be here at all, kauthorized works fine without an app licationname. kglobal doesn't need one to get a config file (it needs a componentdata instead); the only fallback to applicationname in kglobal is i n kglobal::caption() which is completely irrelevant... fixes bug 155700 (kfmclient triggers assertion failure in kauthorizedprivate()) svn path=/trunk/kde/kdelibs/; revision=762400 ";479;compon;1;9-TYPE;129;2da16a1bc52088a8dc61dadaa51f2a993445809d;right wrote first line comment: reason assert here kauthorized works fine without app licationname kglobal doesnt need one config file (it needs componentdata instead) fallback applicationname kglobal n kglobal::caption() completely irrelevant fixes bug 155700 (kfmclient triggers assertion failure kauthorizedprivate()) ;321;1;3;0;3
2da16a1bc52088a8dc61dadaa51f2a993445809d;David Faure <faure@kde.org>;16/01/08 22:45;"i was right when i wrote the first line of this comment: there is no reason for this assert to be here at all, kauthorized works fine without an applicationname. kglobal doesn't need one to get a config file (it needs a componentdata instead); the only fallback to applicationname in kglobal is in kglobal::caption() which is completely irrelevant... bug: 155700 svn path=/branches/kde/4.0/kdelibs/; revision=762398 ";416;compon;1;9-TYPE;129;67cd1a4eadffd07329fabb26291f3d5f370401f9;right wrote first line comment: reason assert here kauthorized works fine without applicationname kglobal doesnt need one config file (it needs componentdata instead) fallback applicationname kglobal kglobal::caption() completely irrelevant ;241;1;3;0;3
50d2a201d3fc10be36f59c2ae7d334abe156dd44;Allen Winter <winter@kde.org>;12/01/08 16:39;"backport svn commit 760423 by winterz: - if all packages were found, provide a message saying so - cleanup the output a little. - not all found packages are optional; some are required. so reduce confusion by saying ""external"" instead. svn path=/branches/kde/4.0/kdelibs/; revision=760429 ";289;requir, packag, provid;3;11-TYPE;128;ee07f98fe544a6c17e8b67008d975fd1ca958755;backport svn commit 760423 winterz: packages found provide message saying cleanup output little found packages optional required reduce confusion saying external instead ;170;1;17;14;3
4879a22e2fa3d625514147eb18644500d1347064;Allen Winter <winter@kde.org>;12/01/08 16:34;"- if all packages were found, provide a message saying so - cleanup the output a little. - not all found packages are optional; some are required. so reduce confusion by saying ""external"" instead. svn path=/trunk/kde/kdelibs/; revision=760423 ";243;requir, packag, provid;3;11-TYPE;128;4b0a75f89d6fa95f9569343c33cc715aff81bedc;packages found provide message saying cleanup output little found packages optional required reduce confusion saying external instead ;134;1;17;14;3
a36e934e7ce1ee362b3f90a0b64048f3b7297098;Josef Spillner <spillner@kde.org>;11/01/08 18:43;"- libstreams is not enough, streamanalyzer is also needed (those two are separate packages sometimes) svn path=/trunk/kde/kdelibs/; revision=760011 ";148;packag;1;11-TYPE;128;c81f69904109badb12bfc34d6ae283ad75b9ebc2;libstreams enough streamanalyzer needed (those two separate packages sometimes) ;80;1;2;1;1
434f6142cbf3f545b6cc8d137dcd5ba701376a08;Will Stephenson <wstephenson@kde.org>;04/12/07 20:31;"do not emit wouldblock on read buffer empty, this violates qiodevice's interface (*ouch*). ccmail: thiago@kde.org svn path=/trunk/kde/kdelibs/; revision=744896 ";160;interfac;1;8-TYPE;127;9bb4dbb334b1130ae46abce470dba3cef07b8c46;emit wouldblock read buffer empty violates qiodevices interface (ouch) ccmail: thiagokdeorg ;92;1;16;6;10
79bd269f7a45679e4b052f267eed2a863e1bcd11;Maks Orlovich <maksim@kde.org>;27/11/07 19:23;"as discussed with harri: since: 1) we can not guarantee bc of kjs internal apis for duration of kde4 2) we are not aware of anything outside of kdelibs using them ... do not install the kjs headers. an abi-stable wrapper layer will be proviced at a later point. this is also only possible because the kjsembed folks did the same. svn path=/trunk/kde/kdelibs/; revision=742298 ";376;layer;1;15-TYPE;127;281cdf10bda9784a552811a1f8a0feed4d2bdffb;discussed harri: since: 1) guarantee bc kjs internal apis duration kde4 2) aware anything outside kdelibs using install kjs headers abistable wrapper layer proviced later point possible kjsembed folks same ;206;1;56;28;28
d823eb67c57f5dd5473fd5508a055bc81dfc62a1;Jeremy Paul Whiting <jpwhiting@kde.org>;15/11/07 13:47;"use the activecomponent() rather than the maincomponent() so kcms can use kns without collision, also check the appname on each registry file before adding it in loadregistry, to prevent other collisions svn path=/trunk/kde/kdelibs/; revision=737096 ";250;compon;1;11-TYPE;127;9b36667b45d784eb976da635c30976d76410ae30;use activecomponent() maincomponent() kcms use kns without collision check appname each registry file before adding loadregistry prevent collisions ;148;3;38;28;10
dbd8b930e272e4e69df791a56f9e81cd721c9ad6;David Faure <faure@kde.org>;05/11/07 11:17;"ported all kdelibs-provided kded modules to kpluginfactory. improve kconfiggroup porting in kio/misc/kssld/kssld.cpp. svn path=/trunk/kde/kdelibs/; revision=733064 ";164;provid, modul;2;10-TYPE;126;578152bb137e49fc6ca61cc6284a7c2921f3abb4;ported kdelibsprovided kded modules kpluginfactory improve kconfiggroup porting kio/misc/kssld/kssldcpp ;104;15;156;75;81
73813899486c4c4f25bfb711e3e37f017be19594;Harri Porten <porten@kde.org>;27/10/07 18:38;"only the package error was not unicode-safe but let's better prepare all overloads for a non-ascii char being passed one day. svn path=/trunk/kde/kdelibs/; revision=730047 ";172;packag;1;15-TYPE;126;52eaf7e61305a587d14bd37429e1849834f42639;package error unicodesafe lets better prepare overloads nonascii char being passed one day ;91;2;36;18;18
b2dd0014d8db0a98f64fbd7787d1824370557a45;Matthias Kretz <kretz@kde.org>;24/10/07 21:50;"libkaudiodevicelist is meant for phonon backends only, until i have figured out a good way to have a clearly separate backend interfaces better hide all those from the public docs for now svn path=/trunk/kde/kdelibs/; revision=729021 ";234;interfac;1;9-TYPE;126;e025e40ec69639c9c8c9944cb7454ab339d30113;libkaudiodevicelist meant phonon backends until figured out good way clearly separate backend interfaces better hide those public docs now ;139;1;2;1;1
c12801788d81ed15e6906f02da90499c8bae705b;Kevin Ottens <ervin@kde.org>;22/10/07 18:45;"add support for the storageaccess interface in the fake backend. adjust the fakecomputer.xml file to expose storageaccess where it makes sense. svn path=/trunk/kde/kdelibs/; revision=728218 ";190;interfac;1;9-TYPE;126;814120d84b6d96c6bee1d4120d7326b478a74da2;add support storageaccess interface fake backend adjust fakecomputerxml file expose storageaccess makes sense ;110;5;137;126;11
62d0e0ac7fe389c91f959ed1e1a585ffa4b7cfad;Aaron J. Seigo <aseigo@kde.org>;27/09/07 18:40;"- delay creating the appletbrowser until it's actually used. in practice, one should never create user interface in ctors/init()s of objects that get created at startup of the app if that ui is not for immediately visibility - fix the build temporarily (but commenting out appletbrowser bits) until ivan commits the missing files svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=717926 ";398;interfac;1;4-TYPE;125;8a361809d96cd9023eb02df758e96cc46dd86ac4;delay creating appletbrowser until actually used practice one never create user interface ctors/init()s objects created startup app ui immediately visibility fix build temporarily (but commenting out appletbrowser bits) until ivan commits missing files ;253;2;22;12;10
c46324da2bd3b5925d4b46bb9f7e6f23c4ed6ed5;Aaron J. Seigo <aseigo@kde.org>;20/07/07 03:28;"create a package if we have a scripted plasmoid on hand. svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=690104 ";125;packag;1;6-TYPE;123;e2b172e54f3796a88fcd70f9b15e41160c0df778;create package scripted plasmoid hand ;38;2;152;66;86
837d689e5507b58e7b2e01b9a02dec9cadb7673c;Aaron J. Seigo <aseigo@kde.org>;20/07/07 03:21;"* dissallow copying of packagestructure as it has a dptr but no copy ctor * package::isvalid() checks if the package is valid, e.g. all required files and dirs are present * add methods to packagestructure which return just the required bits svn path=/trunk/kde/kdebase/workspace/libs/plasma/; revision=690102 ";310;requir, packag;2;6-TYPE;123;95525e49d2b91456730fda90f4779f1c730161f7;dissallow copying packagestructure dptr copy ctor package::isvalid() checks package valid eg required files dirs present add methods packagestructure return required bits ;171;4;84;83;1
c4f79156845a37ed94ab632088fa88852db2c6e8;Dirk Mueller <mueller@kde.org>;16/07/07 08:41;"- rewrite the download dialog to not use khtml. using khtml is bad here because: - it is a heavy dependency, which is then introduced for all applications that want to use knewstuff2 - khtml is still full of kde3 support and it might take until webkit to get rid of that - using khtml is dangerous here because it renders arbitrary html, javascript and plugins, so bad providers could easily remote-execute code on the local machine. in addition none of the rendering code actually took care of properly escaping things. - khtml wasn't build to be used in hundreds of little parts the code was pretty bad, it forgot parent parameters every where so it caused hundreds of toplevel windows to pop up temporarily on the desktop when it was launched. it also had a way too complex layout with many unnecessary widgets. the dialog does not quite look that good anymore. but this can be fixed later svn path=/trunk/kde/kdelibs/; revision=688514 ";939;provid;1;11-TYPE;123;f4b3daaaf602540e26175887f429a8cbe4ab5dc5;rewrite download dialog use khtml using khtml bad here because: heavy dependency introduced applications want use knewstuff2 khtml still full kde3 support take until webkit rid using khtml dangerous here renders arbitrary html javascript plugins bad providers easily remoteexecute code local machine addition none rendering code actually took care properly escaping things khtml wasnt build used hundreds little parts code pretty bad forgot parent parameters caused hundreds toplevel windows pop up temporarily desktop launched way complex layout many unnecessary widgets dialog quite look good anymore fixed later ;615;2;804;353;451
90395480856ae7cf1961c099a4b286defbd95f93;Chusslove Illich <caslav.ilic@gmx.net>;02/07/07 08:49;"interface modifications to kcmdlineargs, kaboutdata and kcomponentdata; bic, sic. most of the depending code has been auto-converted to new api. svn path=/trunk/kde/kdelibs/; revision=682259 ";191;compon, interfac, modifi;3;11-TYPE;122;ffc58fcba51ae90e303a8e36ce687d149dbb9b10;interface modifications kcmdlineargs kaboutdata kcomponentdata bic sic depending code autoconverted new api ;108;212;4013;2026;1987
50511fbdef41b886383bc24e2125d2ed784d33da;Peter Penz <peter.penz19@gmail.com>;14/06/07 19:14;"* provide down-arrow * temporary show all available protocols svn path=/trunk/kde/kdelibs/; revision=675702 ";108;provid;1;7-TYPE;122;66c288fefcbc1844687d07af868c19c5bbfb81b8;provide downarrow temporary show available protocols ;53;2;29;23;6
75344f2ba4b92620c744518cc291975e66f58083;Laurent Montel <montel@kde.org>;09/06/07 12:11;"this module allows to test if we installed depends package. for some cmake module it is not necessary to move them into kdelibs as findlibkdegames which is necessary by playground/games which failed if we didn t install kdegames before. not it signaled that it depend under other modules. svn path=/trunk/kde/kdelibs/; revision=673217 ";335;packag, modul;2;11-TYPE;121;c4a04ab807256d754efd757b2fef0d4e0ef77d33;module allows test installed depends package cmake module necessary move kdelibs findlibkdegames necessary playground/games failed didn t install kdegames before signaled depend under modules ;192;1;22;22;0
ac48b95065c0e504c0fd3f43b03fc8a59c76f3ca;Rafael Fernández López <ereslibre@kde.org>;03/06/07 21:12;"* port kate plugin selector to kpluginselector * let kpluginselector have new features: if one added plugins manually (had qlist<kplugininfo*>), and set the setpluginenabled to some value, and dont want kpluginselector to override that property when loading and trying to read from kglobal::config() (or another provided kconfiggroup), just tell it to ignore the config file when loading. same happens if one doesn't want kpluginselector to save directly anywhere any plugin state. this only makes sense again if you have added ""manually"" plugins, updatepluginsstate() new method will do the work, and update your kplugininfo* objects, without saving anything svn path=/trunk/kde/kdelibs/; revision=671132 ";706;provid;1;11-TYPE;121;ba61d2e47bae14100e7c8834509e21f1dfbd81a3;port kate plugin selector kpluginselector kpluginselector new features: one added plugins manually (had qlistkplugininfo) set setpluginenabled value dont want kpluginselector override property loading trying read kglobal::config() (or another provided kconfiggroup) tell ignore config file loading same happens one doesnt want kpluginselector save directly anywhere plugin state makes sense again added manually plugins updatepluginsstate() new method work update kplugininfo objects without saving anything ;508;11;610;203;407
1842df9b426b15e15f7c7e387d0727edc2829c8a;Matthias Kretz <kretz@kde.org>;01/06/07 22:25;"remove the dependency on kdemacros.h so that there can be a standalone libphonon-dev package svn path=/trunk/kde/kdelibs/; revision=670537 ";139;packag;1;11-TYPE;121;3b70c82bb8bacacd892f5db71ac8b8d081f7bf5e;remove dependency kdemacrosh standalone libphonondev package ;61;4;43;31;12
36b0f55e314d0fdf80d4e5883a089f737df78af1;Matthias Kretz <kretz@kde.org>;31/05/07 22:12;"applicationname() needs kglobal::maincomponent svn path=/trunk/kde/kdelibs/; revision=670263 ";93;compon;1;11-TYPE;121;04c42e5111776d0e3f667c923e6b63d51c449b7b;applicationname() needs kglobal::maincomponent ;47;1;1;1;0
f1e600ff6dd744359bdf74b9ca6f2628d0c244cc;Alex Merry <kde@randomguy3.me.uk>;09/05/07 23:47;"patch up the includes for the kde3 network compatibility classes as best as i can without reworking any code, and tell krazy to ignore the fact the files don't include their own headers first. i don't think it's worth fixing these properly, especially given that netsupp.h isn't installed, k3socks.h isn't a public interface (you even have to define i_know_ksocks_isnt_public to use it), and the syssocket.h thing is a peculiar work around for some stupid preprocessors and k3socketdevice.h doesn't need it to be used by users of the library (syssocket.h isn't installed). svn path=/trunk/kde/kdelibs/; revision=663075 ";619;interfac;1;7-TYPE;120;66da40056b8a43459ea10aab26f069f726765f3b;patch up includes kde3 network compatibility classes best without reworking code tell krazy ignore fact files dont include headers first dont think worth fixing properly especially given netsupph isnt installed k3socksh isnt public interface (you even define iknowksocksisntpublic use it) syssocketh thing peculiar work around stupid preprocessors k3socketdeviceh doesnt need used users library (syssocketh isnt installed) ;423;4;18;10;8
7e0d29f451d71ec1274e6a75e22cf38445572f9b;Christoph Cullmann <cullmann@kde.org>;05/05/07 10:52;"only make the interfaces public, or we will use the internal stuff again everywhere... svn path=/trunk/kde/kdelibs/; revision=661367 ";133;interfac;1;11-TYPE;120;7bfcb975beef2f6631c2f72ce72c569d0f2f81b3;make interfaces public use internal stuff again everywhere ;59;1;18;11;7
7db756432b0029efb971c77971ae0769ef2908bb;Matthias Kretz <kretz@kde.org>;02/05/07 21:18;"checking for the destruction first kcomponentdata object is too fragile and already breaks if the application only uses kcmdlineargs and no custom kcomponentdata object. instead install a qt post routine that syncs all kcomponentdata kconfig objects. testcase passes now... svn path=/trunk/kde/kdelibs/; revision=660500 ";320;compon;1;8-TYPE;120;fa1a6a4ff82d961b392a5b3fdeff10b6bf523b7e;checking destruction first kcomponentdata object fragile already breaks application uses kcmdlineargs custom kcomponentdata object instead install qt post routine syncs kcomponentdata kconfig objects testcase passes now ;220;3;34;19;15
2f9f7d35576db0d71d256f6961cfd3bf2a1306da;Sebastian Trueg <sebastian@trueg.de>;30/04/07 21:48;"* moved soprano/qrdf to kdesupport * moved libknepomuk, libkonto, and libkmetadata into kdelibs (the gui elements still need to be sorted out.) * moved the knepomuk coreservices and the service registry into kdebase/runtime. it was agreed that this move makes sense even though kde should be frozen already since it is an important technology. all of the new modules are optional which means that if soprano is not installed none of the knepomuk parts will be. still missing is a cmake message stating this. ccmail: nepomuk-kde@semanticdesktop.org svn path=/trunk/kde/kdelibs/; revision=659840 ";594;modul;1;11-TYPE;120;f0d6df9fd794860a26545df8acdd6c67497ed898;moved soprano/qrdf kdesupport moved libknepomuk libkonto libkmetadata kdelibs (the gui elements still need sorted out) moved knepomuk coreservices service registry kdebase/runtime agreed move makes sense even though kde frozen already important technology new modules optional means soprano installed none knepomuk parts still missing cmake message stating ccmail: nepomukkdesemanticdesktoporg ;394;170;21492;21492;0
51b92f200d7fd4f564d03dac29afc344dfda7550;Matthias Kretz <kretz@kde.org>;30/04/07 21:01;"sync the kconfig objects of all kcomponentdata objects instead of only the main one svn path=/trunk/kde/kdelibs/; revision=659815 ";130;compon;1;8-TYPE;120;bf23ddb15ea9f475bacc9a7e5d3052483867799c;sync kconfig objects kcomponentdata objects instead main one ;61;2;10;9;1
ce69e79d2517cec643b531128d233802883fe4bc;David Faure <faure@kde.org>;30/04/07 17:16;"remove dependency on kmountpoint in kdecore; i didn't like the kdedesktopmimetype design anyway, this is yet another kmimetype subclass that goes away. it means that seeing a ""mounted"" overlay on a device icon requires using kfileitem rather than a direct call to kmimetype though; but that makes sense imho, since it's item-dependent and not a mimetype property. svn path=/trunk/kde/kdelibs/; revision=659707 ";410;requir;1;11-TYPE;120;8d9d801bd3e6ef567ebe0e8ffc355f464c63278f;remove dependency kmountpoint kdecore didnt kdedesktopmimetype design anyway another kmimetype subclass goes away means seeing mounted overlay device icon requires using kfileitem direct call kmimetype though makes sense imho itemdependent mimetype property ;258;10;524;218;306
88ae749aed632eb1be02b8791e8c6e86b51200b6;David Faure <faure@kde.org>;30/04/07 14:33;"merge libkwalletclient into libkdeui (since it only requires kdecore + qtgui); a lib for one class (which kio uses anyway) is overkill. svn path=/trunk/kde/kdelibs/; revision=659626 ";182;requir;1;6-TYPE;120;474200b9a66cacd3502987bfaff6ce559b12e9e6;merge libkwalletclient libkdeui (since requires kdecore qtgui) lib one class (which kio uses anyway) overkill ;110;15;117;37;80
efb5b23ba5c7e617e7601c7e40b9743f1e550acf;Will Stephenson <wstephenson@kde.org>;23/04/07 23:49;"start the implementation of beginmanagingsocket() and co.  this function will provide transparent management of network sockets in dynamic network conditions. svn path=/branches/work/phonon-solid-sprint/kdelibs/solid/; revision=657413 ";235;provid;1;7-TYPE;120;8a7e419f8d7c1d93205060e287cef91de590055a;start implementation beginmanagingsocket() co function provide transparent management network sockets dynamic network conditions ;129;3;143;130;13
07ee90ccb4438961a67c2e69a5fdfc4a1092d42e;Kevin Ottens <ervin@kde.org>;22/04/07 17:39;"move the current power and network management classes into solidexperimental. they're more suited for policy agents, not general applications. for applications, let's introduce solid::networking and solid::powermanagement for regular applications. they're just interface for now, no implementation yet. svn path=/branches/work/phonon-solid-sprint/kdelibs/solid/; revision=656910 ";379;interfac;1;6-TYPE;120;f58a7c7428971a5f57be4119119b82b61ce48363;move current power network management classes solidexperimental theyre more suited policy agents general applications applications lets introduce solid::networking solid::powermanagement regular applications theyre interface now implementation ;244;53;1700;1036;664
54ae74ada28c3f912f9e14b13a3a69408459ea01;Aaron J. Seigo <aseigo@kde.org>;09/04/07 22:57;"remove klanguagebutton.h due to: - unresolved licensing issues (gplv2); dfaure has been trying to get it resolved but the authors have not been forthcoming with a solution yet - the api is pretty horrid =) will be moving it to kmouth and kcontrol (where 2 modules use it) for the time being until the above two things can be addressed (if ever) svn path=/trunk/kde/kdelibs/; revision=652031 ";391;modul;1;11-TYPE;119;7ac4e7209f991bfc4b4fc70a407191e2fa58b7e4;remove klanguagebuttonh due to: unresolved licensing issues (gplv2) dfaure trying resolved authors forthcoming solution api pretty horrid ) moving kmouth kcontrol (where 2 modules use it) time being until above two things addressed (if ever) ;242;5;494;1;493
a9dfe77be264442bea192b6e6e586ef0bdcc6d42;Daniel Gollub <dgollub@suse.de>;09/04/07 19:12;"changed return value of createbonding() to kjob. bonding/pairing is in most cases a blocking task. fixed handling of bluetoothremotedevices in bluetoothinterfaces. svn path=/trunk/kde/kdelibs/; revision=651980 ";210;interfac;1;8-TYPE;119;b0abda7a2d867f41792484c23efcf68eb5abacea;changed return value createbonding() kjob bonding/pairing cases blocking task fixed handling bluetoothremotedevices bluetoothinterfaces ;136;7;121;73;48
daca8830e4f3a1b8d0e305465579304e8ec1cf0a;Maks Orlovich <maksim@kde.org>;27/03/07 04:15;"merge in work done thus far from the blizzard branch: basically, create a locals array in activationimp, and try to statically bind access to it as much as possible, providing a fallback symbolic path for when needed. also use the scopeing information to know to optimistically (unless eval of a var statement injects a local) skip local scope for lookup of variables not in there. also fixes some bugs in funcdecl handling.... speed up results: richmoore's md5:     7078ms to 5351ms (takes 75.6% of original runtime) richmoore's cordic:  6900ms to 4210ms (takes 61  % of original runtime) ibench js:           1.48s to 1.29s   (takes 87  % of original runtime) (it's stable, but needs a few more cleanups. testcases coming soon on a non-monday..) svn path=/trunk/kde/kdelibs/; revision=647005 ";794;provid;1;13-TYPE;119;60987d7bc71439b19cf7ab52eb3963031915a1e0;merge work done thus far blizzard branch: basically create locals array activationimp try statically bind access much possible providing fallback symbolic path needed use scopeing information know optimistically (unless eval var statement injects local) skip local scope lookup variables fixes bugs funcdecl handling speed up results: richmoores md5: 7078ms 5351ms (takes 756 original runtime) richmoores cordic: 6900ms 4210ms (takes 61 original runtime) ibench js: 148s 129s (takes 87 original runtime) (its stable needs few more cleanups testcases coming soon nonmonday) ;573;13;3854;2480;1374
c6d5e67d86d4345777aad3ed63eb3f8200c9f558;Laurent Montel <montel@kde.org>;23/03/07 16:40;"it's better to move it here that kdebase because if we don't install kdebase and try to compile and other module which requires plasma we will have an error but we didn't know which error (just plasma cmake file not installed i will remove it from kdebase next monday svn path=/trunk/kde/kdelibs/; revision=645811 ";314;requir, modul;2;11-TYPE;119;8014617f9286317480f6920b2f77886e85bcf936;better move here kdebase dont install kdebase try compile module requires plasma error didnt know error (just plasma cmake file installed remove kdebase next monday ;165;1;44;44;0
48d6daa40e461ebbfd51ed16e650ac723afcd2fe;Aaron J. Seigo <aseigo@kde.org>;19/03/07 16:16;"* move krfcdate to kdesupport as k3rfcdate as there is nothing it provides that kdatetime doesn't * get rid of the kcalendarsystemfactory as it had just a couple of simple factory methods which belong just as nicely in kcalendarsystem itself svn path=/trunk/kde/kdelibs/; revision=644252 ";288;provid;1;11-TYPE;119;5cd88e612681b03b9b0de516ca921dec877d0a1c;move krfcdate kdesupport k3rfcdate nothing provides kdatetime doesnt rid kcalendarsystemfactory couple simple factory methods belong nicely kcalendarsystem itself ;163;13;385;151;234
48e31256521b2658cc926dbc5be2e5e61c93db0f;Matthias Kretz <kretz@kde.org>;16/03/07 17:44;"factor out the kio fallback code from mediaobject into its own class => will make it easier to get rid of the libkio dependency in libphononcore cleaned up the interface_call macro to only take one argument now a little bugfix in kiofallback to really stop reading data when enoughdata is signalled svn path=/trunk/kde/kdelibs/; revision=643244 ";345;interfac;1;11-TYPE;119;45c3c71087e5cc92febe6c3e779dda26e22c29c6;factor out kio fallback code mediaobject class make easier rid libkio dependency libphononcore cleaned up interfacecall macro take one argument now little bugfix kiofallback really stop reading data enoughdata signalled ;220;10;735;430;305
8ba8db2b761d9e9ed12a2921df23d15cd5f0b275;Kevin Ottens <ervin@kde.org>;12/03/07 17:37;"port to the kjob change allowing to manage several units. more cleanup is required here, we probably don't want to emit the signals by hand. svn path=/trunk/kde/kdelibs/; revision=641823 ";187;requir;1;3-TYPE;118;4776236aef93994e251a75cbe0c1eb202ecfc9df;port kjob change allowing manage several units more cleanup required here probably dont want emit signals hand ;111;3;73;42;31
1e12e319f0532ef6ea2293e14e45120f4e38052c;Aaron J. Seigo <aseigo@kde.org>;06/03/07 18:16;"install the buggers. you didn't need that 103mb of disk space for anything anyways, right? p.s. once we're using oxygen names (which follow the xdg naming spec, plus extensions) in the code crystal will be moved to kdeartwork/ (or?) svn path=/trunk/kde/kdelibs/; revision=640059 the following changes were in svn, but were removed from git: m       pics/cmakelists.txt a       pics/oxygen/cmakelists.txt ";404;extens;1;10-TYPE;118;0d94b1e7a90ea4a3e72bd61fc797e4162451f3c9;install buggers didnt need 103mb disk space anything anyways right ps once using oxygen names (which follow xdg naming spec plus extensions) code crystal moved kdeartwork/ (or) following changes svn removed git: m pics/cmakeliststxt pics/oxygen/cmakeliststxt ;259;0;0;0;0
5287efea9e9296cde087fe9d485bd01e6f106a5a;Christian Schaarschmidt <schaarsc@gmx.de>;15/01/07 20:46;"allow subclasses to modify context menu: - moved code from klineedit::contextmenuevent to klineedit::createstandardcontextmenu - made klineedit::createstandardcontextmenu virtual allow modification of context menu - new setcompletionmodedisabled bug: 137430 svn path=/trunk/kde/kdelibs/; revision=623893 ";304;modifi;1;9-TYPE;117;5287efea9e9296cde087fe9d485bd01e6f106a5a;allow subclasses modify context menu: moved code klineedit::contextmenuevent klineedit::createstandardcontextmenu made klineedit::createstandardcontextmenu virtual allow modification context menu new setcompletionmodedisabled ;226;2;47;37;10
cd93a6cf72758b3767bd9a02ba10f112a08a26ee;Aaron J. Seigo <aseigo@kde.org>;11/12/06 16:15;"after discussion with dfaure about gui usage in kdecore, we decided to move this method one more time, this time into kdialog since that's where we have other window convenience functions like marginhint and spacinghint. now to spend the next hour committing fixes for other modules. gotta love mondays ;) svn path=/trunk/kde/kdelibs/; revision=612484 ";352;modul;1;6-TYPE;115;283d8d54bffc58c8988cf55ae218e968b0e77176;discussion dfaure gui usage kdecore decided move method one more time time kdialog thats window convenience functions marginhint spacinghint now spend next hour committing fixes modules gotta love mondays ) ;207;6;163;81;82
9403362e85220b3de34fae688bcaf77ba5dd4d6e;Sebastian Sauer <mail@dipe.org>;27/11/06 18:34;"move modules svn path=/trunk/kde/kdelibs/; revision=608505 ";59;modul;1;6-TYPE;115;27bd60f18f0d2f7481b00b6d0bff9cd31261b53c;move modules ;13;6;1425;1425;0
b7ae04b1233c55cf62ed8ef915b02ad6d372895e;David Faure <faure@kde.org>;27/11/06 14:52;"moved kapplication, kuniqueapplication, kstartupinfo, kcrash, kwin, kwinmodule from kdecore to kdeui. moved k3mimesourcefactory to kde3support (no longer instanciated by kapplication, must be done manually, but i found no code in kde svn that was using the icon:foo feature anyway) rearranged the cmakelists in kde3support. svn path=/trunk/kde/kdelibs/; revision=608420 ";370;modul;1;6-TYPE;115;9ac01b3a0423811753f376975ef0682f7f97ade6;moved kapplication kuniqueapplication kstartupinfo kcrash kwin kwinmodule kdecore kdeui moved k3mimesourcefactory kde3support (no longer instanciated kapplication done manually found code kde svn using icon:foo feature anyway) rearranged cmakelists kde3support ;261;30;231;99;132
b7e04ff2e20db5e346ad44c35dbcc325bd3d9802;Rafael Fernández López <ereslibre@kde.org>;06/11/06 16:40;"new kpluginselector class * source compatibility (obvious) * reverse dependencies * renewed architecture svn path=/trunk/kde/kdelibs/; revision=602718 ";151;architectur;1;15-TYPE;114;a7407a19b3873e8d00d4cfdabf7e5eb857e2fead;new kpluginselector class source compatibility (obvious) reverse dependencies renewed architecture ;99;3;1757;848;909
e5d0cf4292448dd3d200e7a4a6b13c656589bad5;Sebastian Sauer <mail@dipe.org>;28/10/06 00:32;"* added initial implementation of the ported ""export to html"" script using forms. needs more work. * fixed crash on qmetatype::void. * restore python exceptions once thrown + fixed wrong exception lineno + fixed qstring::null handling. * fixed wrong packagepath on guiclient * extended kspread's sheetadaptor with the text+settext+value+setvalue methods. maybe move those methods to sheetadaptor? * ported kspread kross module work done on akademy in the 1.6-branch. svn path=/trunk/koffice/libs/kross/core/; revision=599644 ";525;adapt, packag, modul, extend;4;1-TYPE;114;bde268e1167ca0db09f2aa78c6f8db594584a335;added initial implementation ported export html script using forms needs more work fixed crash qmetatype::void restore python exceptions once thrown fixed wrong exception lineno fixed qstring::null handling fixed wrong packagepath guiclient extended kspreads sheetadaptor textsettextvaluesetvalue methods maybe move those methods sheetadaptor ported kspread kross module work done akademy 16branch ;398;1;18;9;9
8061a631c8fd1d4cf369703a3ec035178f8ba128;Sebastian Sauer <mail@dipe.org>;20/10/06 17:50;"moved guimanager functionality to the scriptmanager module. svn path=/trunk/koffice/libs/kross/core/; revision=597545 ";118;modul;1;10-TYPE;114;4c37000e48935202dfdb23521e6b724845a9c94d;moved guimanager functionality scriptmanager module ;52;5;165;76;89
3b8d0322c3ecca0f537be2bca0490f156a953415;Sebastian Sauer <mail@dipe.org>;07/10/06 16:05;"* improved caching of methods at the python-backend. ~10% more performance. * made sequence_slice in pythonextension work as expected. * some more work on forms. svn path=/trunk/koffice/libs/kross/test/; revision=593358 ";220;extens;1;13-TYPE;113;d228e75a2a74f87ff276479333264519acbb3ef2;improved caching methods pythonbackend 10 more performance made sequenceslice pythonextension work expected more work forms ;124;4;71;56;15
5f9f1699333f1b2dbe752be6c26f8072fc747410;Hamish Rodda <rodda@kde.org>;21/08/06 05:22;"d-pointerize the ktexteditor interface classes add mutex to smartinterface, to allow changes to smart cursors and ranges in a thread safe manner.  this is a bit of an ugly global lock for the moment and may need to be made more granular. a few extra regression tests. svn path=/trunk/kde/kdelibs/; revision=575252 ";314;interfac;1;8-TYPE;112;36525afd3cc7b6271a3d17c1e23a6d2774006b60;dpointerize ktexteditor interface classes add mutex smartinterface allow changes smart cursors ranges thread safe manner bit ugly global lock moment need made more granular few extra regression tests ;200;29;404;351;53
c63b2096880523d7a80253ec82af5ca69bf954c0;Thomas Zander <zander@kde.org>;19/08/06 16:11;"introduce a little library with an action class thats build on top of threadweaver. the action can be used to make threading even simpler and provide a familiar concept as the sole controlling api. all you need to do is create an action object, connect to it and using the execute() method the code will be executed in the proper thread. svn path=/trunk/kdenonbeta/threadweaver/; revision=574638 ";396;provid;1;1-TYPE;112;2cadf74d84d086d0147a900adf95251e25490b87;introduce little library action class thats build top threadweaver action used make threading even simpler provide familiar concept sole controlling api need create action object connect using execute() method code executed proper thread ;238;16;1022;1020;2
